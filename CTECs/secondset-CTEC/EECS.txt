Northwestern
EECS_111-0_20: Fund Comp Prog Ian Horswill
Course and Teacher Evaluations CTEC Fall 2016
Project Audience 284
Responses Received 201
Response Ratio 70.8%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction , republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Tue, Aug 01, 2017
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        197
Mean        4.59
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        198
Mean        4.23
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        198
Mean        4.32
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        197
Mean        4.47
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        196
Mean        4.41
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        33        16.7%
4 - 7        108        54.5%
8 - 11        36        18.2%
12 - 15        16        8.1%
16 - 19        4        2.0%
20 or more        1        0.5%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
Racket is a very odd programming language, but it provides a good framework to learn and/or review the basics of computer science and programming.
Loved the class. One of the best I've taken this quarter. Sometimes the material can be a little dry, but Ian makes it fun and interesting!
Great course for everyone... when if you know programming from before.
It was very hard
This course was chill and a nice break from the other typical high-pressure fast-paced engineering classes. Ian was a great instructor and there were so many TA's that grading was always done fast and there was always someone to answer any questions. The use of Piazza helped a lot as well. My only experience with programming was Matlab and R and I still found this course very well paced and easy to comprehend. I do wish we learned some more imperative programming languages like C or Java, but learning functional programming through Racket has it's merits.
I think having access to so many TAs was very helpful, and learning a new coding language through this class wasn't that difficult.
Coming in with no experience in computer science, I did fairly well in this class. The Quizzes/midterms were much easier than the actual homework exercises. I learned the most from the tutorial sessions. Make sure you understand how to do the homework exercises as many of them are very long and take a long time to finish. Lots of office hours available. Though Racket is not a very useful language, I would definitely recommend to anyone else who has no experience in computer science to start with this class.
Material is good. Coding language is kind of annoying and I have heard that we don't use it much going forward, but was very effective in teaching us basic concepts. The lectures were a little bland and I felt like I didn't have much motivation to go, which affected my learning.
Racket was a weird language but I think it built my program thinking. Ian is cool but I was able to learn by not going to class and just reading off the lecture slides. The most learning happened during tutorials and through homework.
This is an easy course if you're ready to spend some time understanding the logic behind coding. Good intro class! Ian is a great professor, really fun!
The content was rather easy to learn and understand, but the homework was either very easy or very hard depending on how well you understand the covered topics and how deep the application of the concepts was. I overall enjoyed the course and Ian is a great professor who knows what he's teaching. The quizzes given are pretty easy compared to the homework.
I loved the professor and the way the course is organized (1 assignment per week and 3 quizzes).
This class is hard and takes a lot of work. Lecture wasn't too useful at all, go to as many office hours as you can.
This class is good to further your knowledge on Dr. Racket. Lectures are pretty much the slides, so attending class isn't necessary.
the course is okay, but programming in racket is annoying. I don't recommend taking this class if you don't have to.
I really liked this course. It was difficult for me being a beginner, but Ian was a really great instructor and the undergrad TAs were amazing. The assignments were structured so that you had enough time to get help if you needed it and ensure that you were doing it right. It's a little irritating that Racket is not actually used in the real world, but I understand the logic behind using a teaching language. Definitely not an easy class (for me anyway) but still very manageable to get a good grade. I probably would not have passed this class without going to the TAs' office hours; Sasha, Shane, and Will were super helpful.
The professor was good, but the language itself, Racket, is dumb.
Racket is really frustrating if you're used to Java or really any other language, but Ian is a great teacher, and the quizes are fair (make sure to familiarize yourself with the format ahead of time). All in all, EECS 111 is a good class, but could be better if the language it used wasn't so annoying at times.
Needs more assessments, only had one quiz grade before reading week.
Learnt a lot in this course. Not too hard.
The course is not very time-consuming, and Ian is a great professor. TA discussions are very interactive and helpful. Homeworks can be difficult especially for a beginner programmer like myself. Paying attention in lectures is important to success. The beginning of the course is very easy and will catch you off guard because it gets much more difficult.
Lectures were kind of boring, but the homeworks were really interesting and that was really where the learning happened.
Supposedly, the language is difficult to understand. There are many frustrating things about this class, especially if you haven't coded before. But the TAs are great, especially Sarah, and the teacher is helpful. If you want to learn the "logic" of coding, a helpful class.
If you don't have a background in programming, this is not a course for you. It really doesn't teach foundations for beginners - it teaches important topics for people who already have a strong background in programming. This class leaves people behind to fail. For instance the final exam - yeah, over 70 people got less than half of the problems right, but because most of the class is CS majors who have seen this stuff before, the mean was an 80% and over 100 people got an A on the exam. Additionally, some of the peer mentors (basically TAs) will make you feel stupid for not getting concepts and then they'll insinuate that you're wasting their time and the time of your classmates by going to office hours. But really it's just because this class is for people who are serious about programming, or at least that's how they look at it.
I loved Ian's lectures, they were interesting and had a lot of background information about computer science (which some may not like). Overall the course isn't too hard and is manageable if you pay half-attention during lecture and understand the hw codes.
Wasn't too interested. Racket isn't a very nice language.
Really enjoyable class. Great intro class for not only CS majors but anyone interested in programming. Ian makes the information accessible to all students and really encourages everyone to do well in the class. TA's are a hit or miss. Head TA's know exactly what they're doing but some other TA's have no idea what they're doing.
Was a good overall class.
This course was fantastic at teaching basic computer science techniques, but the language was utterly useless.
Ian Horswill is awesome, but lectures did not really help with learning the material. Also Racket is not a good language.
Ok class, find people to work with you, programming concepts same as others.
I felt that the course could have been taught in a less abstract way since the professor often times really abstracted or went off on tangents. The lectures seemed to be a little boring, especially near the end and that did not help. Perhaps if there were examples questions given in class or even just physically writing code in front of us could have been more useful. Other than that, the office hours were bountiful and spread out which was very useful and the tutorials were useful resources for understanding how to do certain topics like recursion or imperative programming.
I didn't really learn what I expected to, and I feel like it didn't make me very excited about programming. The material was very mildly interesting, and not too hard. I did learn some concepts which I now understand are applicable to all languages, but I think the class could be improved.
The tests were fair, the exercises were difficult and there were too many of them (why was one due during finals week?), and Ian was cool
excellent introduction of computer science concepts. There are people who whine and complain that Racket's useless, but as someone who's taken two comp sci classes before this, I can say that it is an excellent survey of fundamental CONCEPTS in computer science, which is very important because this knowledge will carry over when you're trying to learn other programs.
Interesting course overall, but not super useful just because we use Racket.
Learned tons without putting in a whole lot of effort. Honest attendance is enough to get most any student through, Ian is great but can move a little slow. Easy tests, overall a great class
This was a very solid introduction to programming. Prof. Horswill is a very clear lecturer and very willing to answer questions. This class will be fairly simple if you took AP Comp Sci or have other programming experience. If anything, you will gain a better grasp on recursion.
Great class. I mostly learned through homework. Tests were really easy. Ian is a great professor. Lectures are interesting but definitely not necessary to do well in the class.
The course should have been taught in a more applicable computer language such as Python or C++ as they are much more useable in jobs later on than Racket.
Very disappointed with this class. I'm a computer science major, so this class is required, but I was not happy at all. The language we used, Racket, is a waste of time and useless in the real world. If you have no programming experience it's probably helpful to learn concepts like recursion, but as someone who already knew all the concepts taught in this class, it was very hard to motivate myself to relearn these concepts in a useless language that is literally never used outside of this class.
Good
The first few weeks were easy since we didn't really get any homework and the homework exercises were easy. However, at around week 5 or 6 everything got SUPER hard, especially if you started to relax and take it easy since you thought the first few weeks were easy. Basically, don't fall behind and you should be fine.
The homework assignments were very difficult and I wish the course was a bit more practical and was taught in a language commonly used. The quizzes were not too bad though
If you want to learn programming, this is to the course. Do one on a particular language. However, it's an easy A and a moderately interesting class.
This class made me want to be a computer science major.
Great class for learning about computer science concepts.
It was labeled as a beginner class but as a student coming out of AP computer science it still felt extremely difficult.
Ian tends to go really slow on the easy concepts and really fast on the harder concepts, the course can be initially really really hard for someone who has had zero programming experience. The programs are really, really difficult to do after the first few, but the quizzes are definitely doable if you practice a lot of problems and you know what kinds of problems to look out for.
This class is great to take if you want to figure out if you like coding or not. Overall easy but also challenging (the assignments could be hard and not well explained)
The course did focus on all the topics it was supposed to.
The programming language used in this course initially did not feel too comfortable too use, so even if you've programmed in the past, there's a period of adjustment needed before you acclimate to the rhythm of the course. The class itself, however, is really not asking too much. If you just complete the weekly assignments and attend the tutorial sessions, the class should not slay you. For new programmers though, there's likely going to be a learning curve, although office hours and Sunday recitations (where a TA goes over and reviews material covered in the past week's lecture) should be sufficient to help you stay on track.
I think this is a good class but I think they need to rethink how it is taught. I feel completely unprepared to do the homeworks and rely solely on office hours to complete them. Also, TAs should have access to the homework answers because often times they won't know an answer to a homework problem either. Homeworks should either be easier or be worth more because they take up so much time.
I had heard that this class would be easy with prior programming experience, but that was definitely not the case. I never learned anything in lecture, and the "quizzes" were too difficult given that there was basically no way to study for them besides the practice quiz.
Course and instructor are interesting, but the language we use is disgusting.
Didn't offer enough resources for learning outside of class, Ian was a good professor though.
Ian is an engaging lecturer and the material is interesting. If you are familiar with programming this class won't be too difficult but there is still enough new information to make it worth your time.
Tutorials were a waste of time and should be optional; they're only useful for students who are struggling and need extra support. Homework was way too easy due to the excessive amount of handholding (i.e., guidance and work already done for us). Since very little theory is introduced in this class, it's pretty much just a course that covers writing basic programs. As such, it would make so much more sense to work with a more useful and widely applicable programming language like Python instead of Racket. All in all, I don't see why EECS 111 exists. I took EECS 110 last year, and it was a far better course and could certainly replace 111 in my opinion.
lol.
Racket seemed like a bad language to start out in, I was lost for a lot of it
The language used in this class is by far the strangest I have ever seen and I'm not a huge fan. That being said, it's not too difficult to pick up on, the syntax is just strange.
The class is as interesting as a class taught for a 200-person lecture hall can ever be. Ian is engaging, friendly, very funny and brilliant, and the material is well designed. The assignments are fun enough to do that I legitimately look forward to doing my homework. The only complaints I have are the complete lack of individual attention that is inevitable in a massive lecture hall, and which makes participation effectively impossible for anyone who isn't lunatically brave. However, be warned that this class teaches in a useless programming language because it communicates concepts very well, which is a cool thing for the long haul and I've heard pays off wonderfully for the major eventually, but is a bit frustrating since you can't do all that much in the real world until like three classes from now.
This was not my most favorite class. It's difficult to learn coding quickly and effectively, so this class required, at least for me, going to any and all office hours to complete the homeworks.
Don't try to study for this class alone. It can be confusing. Go to office hours and find classmates to work through practice tests.
Have to put in the work to do the exercises and the quizzes are rather difficult
The homework was really important. It really helped me learn. I wish I would have taken it more seriously.
Only take it if you have to. I was excited to learn to code but this isn't the class for that. This is the class where everyone is passing code along (probably taken from the 1% who knows what they are doing or has coded a lot before). The lectures and tutorials DO NOT prepare you for the homework. Also, the student TAs have less of an idea of what is going on than the current students. The only time they are ever helpful is when they just feed you code. worst class ever.
This class is not introductory. The homework assignments are long and difficult, and lectures are confusing at best for someone who has little to no exposure to computer science. The language is obscure and the assignments are so stressful that I was doing them only for the grade not to learn the material because I felt pressed for time always.
The homework is really hard and will take up a lot of your time. In comparison the quizzes are extremely easy. Lecture is not that helpful if you are someone who is easily distracted because its not very engaging.
DrRacket is annoying to learn if you took AP Computer Science in high school and learned Java or a different language. Ian is a good professor and his slides are understandable, but usually they are easier to comprehend than the exercise programs that are due each week. Having a good TA is essential to asking questions about these exercises.
This course was very fun. Ian is a wonderful speaker and engages you strongly when teaching the course. As someone who has done computer programming for years, I did not learn many new ideas about programming during this course, but it was a good and engaging refresher course on basic computer programming.
The homework assignments for this class were so very difficult for me, however there were many office hours posted and the quizzes were not that bad.
This class seems really easy at first, but then it gets you real quick. Ian teaches well, but he teaches at more of a conceptual level. The tutorials were great for applying the concepts.
Pretty challenging if you don't know anything about CS, lectures do not help to clarify anything. Make friends to study and figure out homework with, otherwise you will never be able to do well.
I was super rusty with my coding skills and it brought me back up to speed. The usage of Racket as the language really levels the playing field so that people who don't have much experience with programming can do as well as the people who have a lot of experience. It was a fun course and Iɽ recommend it to nonmajors because if you like puzzle-solving, you'll probably like coding. Also, you can ask for an extension every week, which really helped spread out my workload.
Don't take it without a friend.
Ian is the best professor ever.
Ian was a pretty good prof. Exercises and tests weren't too bad, there are a lot of TAs so lots of opportunities for office hours but also some are hit-or-miss. A strange mix between moving too slow for the coding-experienced and too fast for the non-experienced, though.
SO HARD OMG IF YOU DONT LIKE COMPUTER SCIENCE!!! DO NOT TAKE THIS AS A DISTRO!!!! OMG!!!!
Ian was a great prof. The Exercises do get pretty tough so thats annoying but the quizzes were easy.
This is a great course to get an introduction to functional programming˼omputer science. The professor and TAs make themselves very open to helping you. The work is manageable and the topics range in difficulty.
Professor Horswill explains the material quite well. The class itself does get progressively difficult, and the homework assignments can be difficult. The quizzes are a lot easier. There are a lot of TA's in this course, but most of them were not helpful at all during office hours. They were very under-prepared and would often not do the course work themselves. Overall, you should expect to do more work than the course number would suggest, but it's an interesting class nonetheless.
Easy course if you have background in the subject. If not, racket can be really confusing at times.
Racket definitely is not the most fun language to work with. It is not nearly as intuitive as many other languages are, and i saw more than one friend drop out of the course because it was taught in a strange language.
Racket seemed like a useless language, but a lot of the topics are similar to higher-ended programming.
It is like a nice introduction.
As a Kellogg student, this class is great.
This is a good class for people who have never programmed before... and those people only. The department must waive this class for students who have taken AP CS already. Using an esoteric language like Dr. Racket does NOT 'ɾven the playing field'' for people who understand programming... it just annoys people who dislike Scheme. Personally, EECS 111 was a waste of my time. The AP class was far more challenging. If you can program and have to take this class for a requirement, here's some advice: skip lecture and use that time to build side projects.
I knew the material before the course, making it a breeze. Almost a waste of my time. But I feel like this class is a good introduction to people who are new at programming. It would have been helpful for me like 3 years ago.
The course was very well designed for an intro course, it was thorough and went through all the fundamentals.
The main coding language in this class is challenging, but places emphasis on the foundations of coding
This course is a well-structured introduction to programming. The lectures are huge, but they try to compensate that with small tutorial sessions. Lecture was often dry, but the class is definitely manageable.
Having no past experience in programming, I greatly enjoyed this course. I took it purely to see what the class is about. However, it is an introductory class and I was disappointed that most students already had copious amounts of prior knowledge.
It definitely made me want to enroll in more EECS courses and learn more about the discipline.
Ian is a great guy and great professor, this course is not too challenging or time consuming.
Very very easy to fall behind
Decent class that would be totally doable for first-time coders. Pretty much all review for people who have taken AP Comp Sci so not that challenging. Weekly projects don't take too much time and there's an army of TA's so lots of help available
PROS: Racket language is fun, Fun assignments (video game!), Learn a lot, Easy quizzes.
CONS: Time consuming weekly assignments. They take about 4-9 hours to do. TAs are not that helpful. Discussion/tutorial is useless but you have to go anyway.
OVERALL: This class is meh. If I could go back in time, I would probably not take it. For the most part, you learn a lot but the class is quite tedious. Towards the second half of the class, I never went to lecture at all and could still complete the assignments and do somewhat well on quizzes. ONLY TAKE IT IF YOU NEED IT FOR THE MAJOR!
The lecture and exam material is relatively easy, but there is a huge discrepancy when one compares it to what is on the homework programs, which can get unnecessarily hard, in my opinion.
I thought it was odd that they put a mix of people with and without coding experience into the same class. The new language of DrRacket (which is kind of the worst, different from most languages you'll encounter) kind of levels the playing field, but having a programming mindset still helps. The lectures however aren't too intense, and the tutorials are relaxed and especially helpful if you have a good TA.
You get what you put into this class. If you do your own work and go to class, you will do well. It's really easy to slack off, but it's even easier to do well if you just show up and do your own work.
A good first computer science class. Gives a foundation for a variety of concepts. Lectures aren't always focused and could be more clear but overall not a super hard class.
Prof. Ian is amazing. I really like the way he teach. The course is not very hard but stimulate your interest in programming.
not the best class but I had a great TA and I like coding.
This course was relatively confusing to me. Instead of simply teaching a programming language it taught the conceptual side of programming. Probably a great course for programmers looking to learn about a different side of CS. As a first time programmer, I found this course really difficult. There was a lot of computing jargon that just did not make sense to me.
Pay attention to where the parenthesis go!
I came into this class knowing absolutely nothing about computer programming and I learned so much! It really allows you to build your knowledge from the ground up without feeling pressured. The TAs are so friendly and office hours have saved my life time and time again.
The most impotant thing to me was learning to think differently
Lots of homework
I wanted to see if I enjoyed coding and if it was potentially something I would like to pursue and it is
Horswill does a great job of keeping students entertained during lectures. Heard Sood is easier, but definitely no complaints about Horswill.
Good introduction class to coding, Racket gets a little annoying at times.
Assignments can be nice challenges. Lectures are kind of boring but what can you expect from a 300 person class?
Certain concepts were incredibly hard, however, the vast majority was too simple.
The course was extremely tough, but helped me learn a good amount about computer programming
It was a very challenging class. The lectures did not make sense and the homework programs took forever to complete.
Do not take this class with Horsewill, He is not a good lecturer and he does not care about how his students do in the class. The assignments were confusing and not a good reflection of the material.
Overall, the tests weren't too bad, if you study the practice tests and his slides you'll do fine. Also, even though the exercises are challenging they really do help in understanding how the procedures apply to a language. There's also A LOT of office hours available so you can get help to do your homework. Take advantage of them!
This is a great intro to programming class. If you are even considering Comp sci as a minor take this class to see if you like it. For assignments, go to TA office hours they are extremely helpful!!
It is a nice course for introduction into programming
I took this course to see if I would be interested in computer science, but unfortunately, this course was not structured in a way that helped me realize if I cs is something that I would like to pursue or not. I felt as though I was struggling to keep up with the students who already had cs experience.
The coding language learned is not really relevant to languages used in the world today so that was disappointing. But I did have a lot of fun in this class as I was learning the design process and that would be able to transfer over to other languages which would help me a lot in the future.
Not too hard of a course and learned a lot about programming.
Racket is quite a pain to learn.
A fantastic intro to computer programming. Don't take that to mean it's easy, though. Definitely one of the harder courses I took this quarter.
I enjoyed this course. Ian is a pretty good teacher and a pretty chill guy and clearly has a love for programming. The work load isn't bad at all: just one exercise per week due every Friday (you can get an extension until Sunday any and every week if you choose) and a one hour "tutorial" session at whatever time you choose during the week (I would recommend earlier in the week because it sometimes helps with the exercises). While I and most others don't love the Racket language or at least its syntax (Parentheses. Parentheses everywhere.), I can understand why it is used to teach us the basics. The fact that this course dealt with such a low-level language helped me to better understand concepts like recursion that you wouldn't encounter in other higher-level languages such that have loops and other things programmed in and what not. All in all, I would recommend this class to anyone taking this course who has an interest in learning to program as a discipline and is still useful even if you are planning on only learning a single language for whatever reason. Previous programming experience is certainly not required, though it does help of course.
I learned a lot, but failed to see the usefulness of learning the language DrRacket
A fine course!
I thought the course was interesting and was really impressed by the amount of resources that this course had. I was able to get help in SOOO many different ways which was really comforting and helpful. Lectures did not help in understanding the course though.
The lectures do not help with me trying to learn. If you don't learn well through just being lectured then this class is not for you. Also the TAs are snakes because a lot of them were not at their office hours
Having already coded before, this class was very frustrating. The pace seemed slower than an average class and I don't think that it would provide that great an understanding of coding or the logic behind it had I never coded before. There wasn't much emphasis on how to approach problems or solve them as much as explaining how to do simple tasks in a language that doesn't have much practical use (Dr. Racket). The tests were not a reflection of one's ability to write or even understand code as much as they were how well you could memorize the syntax patterns for Dr. Racket
The language is kind of annoying at times, but pretty basic. The TAs are helpful if you go to office hours--in my opinion, the lectures weren't very helpful, but a lot of people thought they were. Overall, this course is very helpful for gauging whether or not programming is a good match for you.
Easy if you have computer science background, would NOT recommend if you do not and are looking for a place to learn CS.
It was a hard course, especially for someone with no CS experience
I enjoyed learning about the fundamental, abstract ideas of the course but I wish we had learned a more useful and applicable language than Racket. I did not find the lectures to be entirely helpful either.
good course, pretty well organized
111 is a great intro class. Although DrRacket may seem silly sometimes, it is a very simple, straight to point language to learn. It was my first time learning programming but if you follow the class and do exercise on your own, you will be able to pull it off and learn a lot.
If you haven't programmed before, DO NOT take this class unless you have someone to act as your personal tutor. The homework could be impossible at times. But, if you get the concepts, the quizzes are fair.
Great class, racket not used that much but it does provide you with a good foundation.
the tutorials are where i learned most
I enjoyed the course. Racket is not my favorite language but it was definitely an interesting perspective.
This class will be difficult if you have no prior coding experience. Take it if you have to, but it may be an overload if you want to take it as an elective. DrRacket is such an odd programming language.
I think this is a well done intro class, the sheer army of TA's and tutorial sessions mean help is always at the ready and you still get to learn hands on in small groups
EECS 111 was by far my hardest class this quarter. I do not know if it was the teaching or if it was the material. I could not understand why codes were written how they were and even spending hours trying to study and learn and practice the code myself, it was infuriating. I also strongly disliked the language of Racket as well. It doesn't seem applicable anywhere but in class.
This course is manageable. Lectures are not mandatory. If you have a background in programming, just follow up on the content through lecture slides. Spend time on the assignments and check them, double check them, triple check them. Take your time on the quizzes. 3 quizzes, each 25 % of your final grade, last quiz cumulative.
This course is difficult but taught the fundamentals of programming.
Racket is a very irritating language. Ian is cool and the tutorial system is a great way to get one on one help when you need it and brush up on things you learned during lecture.
THIS CLASS IS A TRAP DON'T TAKE IT UNLESS YOU PLAN TO BE COMP SCI MAJOR OR HAVE EXPERIENCE IN CODING! NOT FOR PEOPLE NEW TO CODING I REPEAT! THIS IS A TRAP!
This course is not for beginners. Unless you have a ton of coding experience, you will fail in this class unless you have someone to copy homework from. The lectures don't prepare you for the homeworks, and the homeworks don't prepare you for the tests. It's a huge mess that will screw you over. Most of the ta's don't know what's going on either and are more confused than you are. Ian also is not the most understanding guy.
The class, despite being taught in a language that is not applicable outside of the class, does help people who do not have coding experience like me gain a fundamental understanding of the rationale and thought process behind coding. The class is not very difficult and the work isn't excessive. That said, there is basically no curve for the class because everyone does super well.
It was a perfect introduction to computer programming. Very easy and entertaining, but you still learn a lot.
Great class, Ian makes his instructions very clear on all assignments and lecture slides to help facilitate learning outside of class. Assignments were occasionally hard and takes a bit of time. Exams are very straight forward.
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        1        0.5%
Communication        6        3.2%
Graduate School        1        0.5%
KGSM        0        0.0%
McCormick        81        42.9%
Medill        5        2.6%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        95        50.3%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        94        47.5%
Sophomore        68        34.3%
Junior        21        10.6%
Senior        13        6.6%
Graduate        1        0.5%
Other        1        0.5%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        17        8.1%
Major/Minor requirement        135        64.6%
Elective requirement        10        4.8%
No requirement        46        22.0%
Other requirement        1        0.5%
Respondent(s)        199        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        8        4.0%
2        9        4.5%
3        14        7.1%
4        45        22.7%
5        65        32.8%
6-Extremely interested        57        28.8%




 Northwestern
Student Report for Jesse Tov ( EECS_111-0_1: Fund Comp Prog)
Course and Teacher Evaluations CTEC Spring 2018
Project Audience 67
Responses Received 52
Response Ratio 77.6%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction, republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Fri, Jul 13, 2018
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        52
Mean        4.23
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        52
Mean        4.46
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        52
Mean        4.65
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        52
Mean        4.56
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        52
Mean        4.02
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        4        7.7%
4 - 7        33        63.5%
8 - 11        15        28.8%
12 - 15        0        0.0%
16 - 19        0        0.0%
20 or more        0        0.0%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
The class was incredibly fast-paced and hard to keep up with- especially the homework. I spent hours working on codes and the homework was very challenging. The tests were much easier than the homework and really focused on the crucial aspect of the language that you needed to know. I felt behind from most of my class because I did not have coding experience.
I do feel like I learned, but I only learned through the lab section and the homework, never the lectures. They would often go too fast and the professor would not explain things very well. Also, Racket is not a very good beginning language because there is nothing else like Racket in the real world. Lastly, the partner system was awful. I ended up doing nearly all of the work on all of the assigned partner homeworks and it was incredibly difficult to find time that my partner and I could 'work' together. When we were able to choose our partners, that helped a lot.
I learned the most from doing the homework, although the partner system needs improvement. Lectures were fast passed and hard to follow. Overall not to bad if you're willing to put in the time on assignments.
This course was hard, especially with Professor Tov teaching it. He went over so many things and the TAs were extremely helpful.
Winter and Spring quarters are completely different in the overall structure. This year, 2018, the Winter class focused on list processing and data stuff but barely touched GUI and state based game logic. Spring on the other hand had the opposite approach. Making games is a lot of fun however I'm told that 211 builds more on the Winter quarter skill set.
Jesse Too teaches this class at a high level, including the homework being challenging and the lectures covering challenging material. The lectures were very hard to follow as the professor usually just drones on and codes for the entire hour and 20 minutes. You are expected to do over 25 pages of reading a night.
Don't get scared away by the homework, that's the hardest part of the whole class.
Overall, this course gave a good introduction to the principles of functional programming. However, it could have been good if it used a more popular program language instead of Racket, since Racket is rarely used in programming. A language like Python could be a much better alternative.
Homework was extremely hard, tests were easier. If you want this to be an easy class don’t take it with tov.
The course is one in which you get pout of it what you put into it.
Hard class for sure, and not a walk in the park even if you've coded before. Expect to put in 8+ hours later in the course on programs.
I found this course challenging, and it took way more of my time and effort than I wanted considering I had to take it because I am a neuroscience major, and I don't plan on taking another computer science class. The homework assignments are incredibly difficult and time consuming, so make sure you start as early as you can and go to office hours.
Jesse is a good professor and a good teacher as long as you are paying attention in class. Jesse's 111 has a reputation for being way harder than either of the other 111 sections, but if you pay attention and don't fall behind, it ends up being super worth it because you cover so much more interesting stuff in his class than in either of the others.
I get the feeling Jesse cares about teaching and wants to do well, but the lectures are simply ineffective. Not overly difficult, but is more difficult than the other sections of 111.
NOT a good INTRODUCTORY Computer Science course for beginners!! Take the other intro class first, or do NOT take 111 with JESSE if you have less than a major interest in computer science. It is kind of a filter class. If you really like computer science, you will enjoy the class.
God
I didn't love this course. I get that we're supposed to be "learning how to program" instead of learning racket, but I feel it would be more useful to learn a language that we might use again if we're going to continue in programming.
This course is difficult but you learn a ton. If you've heard that Jesse's class is harder than Sara or Ian's that is 100% true so be prepared for a class that is a very obvious step up in difficulty from the other professors. If you're taking 111 for a low time-commitment easier intro class take it with a different instructor. That being said, we definitely learned more in this class than we otherwise would have. GO TO LECTURE. Jesse posts all his code from lecture but it's really hard to follow them if you don't have a reference point from going to class. Lab sections are good to brush up on stuff from the week that doesn't make sense. We have a homework program due every week that range a lot in difficulty. The harder ones can take upwards of 7ish hours. Don't think I would have passed this class without office hours, some of the programs are so hard if you can't talk with someone who knows what they're doing. The homework programs are definitely harder than the exams in my opinion. First exam is really easy and the average is super high, second one is quite a bit harder and definitely requires a lot more studying. Overall I really liked this class. You learn a TON and finishing the programs is really rewarding but it's not a class that you can do well in with minimal effort. TLDR: If you want an easy 111 take with Sara or Ian, if you want to learn more take it with Jesse.
As others have said, Tov is definitely harder than the other EECS 111 professors, but he honestly helped me learn on my own. Much of this class relies on making connections on your own and learning by doing. Although Tov's style isn't for everyone, I can definitely say that I learned in this course. Also, the exams are less complicated than the homework, so just be sure to confidently understand what every type of function does and you should be fine.
I learned to code solely because of this course
Everyone says that the class with Tov is the most difficult 111 class. That is true if you have no previous CS experience. If you do have CS experience, taking the class with Tov will not seem that difficult.
Kinda boring and fairly easy, but I don't think it should be made any harder.
The class is not as bad as other people make it sound. If you do all the homeworks properly, the midterms shouldn't be a problem. Also, do make use of the peer TA hours, it's really helpful!
Racket is a useless language. This course is redundant and useless for EECS majors.
oh oh oh oh and this bird you cannot change
Lots of people did not pay attention during the lectures, but I found it helpful, even though Jesse can go over things pretty fast at times. However, most of the learning can be done through doing the homework and going over the notes posted for each class session.
There is a learning curve to this course, especially with Jesse. He moves very quickly in lecture and it's difficult to follow along if you try to type along with him. I recommend doing to reading outside of class if you can, then downloading the lecture notes (he puts all notes online) and follow along with him. Try to focus on his explanations and how that's translated into the code. Jesse genuinely cares about his students and wants you guys to learn, he's just a little hard to follow at times, so try to follow along as best you can and ask questions when you're confused. He's good about leaving time for questions. Good luck!
This course is harder than expected, especially with Jesse Tov. The exams aren't hard, but the homeworks can be. There's also quizzes at the beginning of every class that are pass⿺il that are sometimes hard.
Overall the course provides a good introduction to programming and an understanding of the programming design process.
This class is really challenging and hard to follow. It can be difficult to pay attention in class, so make sure to take notes on paper or on the program. The homeworks are difficult and challenging, but if you get started early and go to office hours they are doable. Overall, I ended up learning a lot from the class, even though it was hard to realize it during the class.
Study for the tests, Jesse is really tough
This class moves fast, definitely difficult if you have no programing experience. If you don't have experience you might want to take it with a different teacher.
People complain about the teaching style of this class, but I think it actually one of the best-taught classes I have taken thus far. The language used isn't used anywhere outside of the class but it is chosen for good reason. The program has unique functionality that helps you to learn how programming works, and has simplifications that wouldn't be used in a language built for efficiency, but make learning to code less confusing. The professor provides copies of each classes notes in the form of code online, which is very useful when doing homework, which also does a good job of teaching information itself. The professor holds daily quizzes, which can be stressful, but they serve as a good check to see if you have been understanding class, and do not count much for your grade. The professor also provides useful study guides and practice tests before the midterms that do a good job of covering the necessary information. One important thing to know about the class is that you shouldn't try to type the code along him in class. You will just end up falling behind him and missing the point. Instead, it is best to just follow along, take notes if necessary, and look at the code he post online if you find something confusing or did not understand the lecture.
Was a very good intro into basic programming structure and style.
Functional Programming will actually be helpful in your future CS career. However, it is not the "best" for getting an internship. But it's important to learn it to set groundwork for yourself.
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        2        3.9%
Communication        0        0.0%
Graduate School        0        0.0%
KGSM        0        0.0%
McCormick        20        39.2%
Medill        1        2.0%
Music        1        2.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        27        52.9%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        44        84.6%
Sophomore        4        7.7%
Junior        2        3.8%
Senior        1        1.9%
Graduate        1        1.9%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        4        7.0%
Major/Minor requirement        39        68.4%
Elective requirement        5        8.8%
No requirement        9        15.8%
Other requirement        0        0.0%
Respondent(s)        52        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        1        1.9%
2        5        9.6%
3        8        15.4%
4        15        28.8%
5        14        26.9%
6-Extremely interested        9        17.3%




 Northwestern
Student Report for EECS_211-0_20: Fundmtls of Computer Prog II (Jesse Tov)
Course and Teacher Evaluations CTEC Winter 2017
Project Audience 159
Responses Received 106
Response Ratio 66.7%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction , republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Mon, Jun 26, 2017
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        104
Mean        3.65
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        105
Mean        3.78
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        105
Mean        4.30
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        105
Mean        4.70
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        102
Mean        3.58
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        4        3.8%
4 - 7        44        41.9%
8 - 11        37        35.2%
12 - 15        13        12.4%
16 - 19        6        5.7%
20 or more        1        1.0%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
I felt this course was helpful and integral in my CS education at NU. I liked that the homework assignments are worth 70% of the grade because those assignments take a ton of time and it felt worth it. I also liked the way the chapter/subject matter was arranged because I felt it built off each other well.
I have never coded before coming to NU and this course was very very challenging. There was not a lot of guidance with specific commands, so I had to look a lot of them up online, which could sometimes be confusing. Live codes during class are hard to keep up with. The hw codes can get difficult and time consuming really fast, so make sure you start really really early!
The homework assignments seemed really convoluted at times but the labs helped me learn a lot
I thought the homework assignments were extremely complicated to what material we were learning. For me, understanding what the homework was asking was a lot more difficult than understanding the CS material that it was supposed to be supporting.
If you've had experience with C++ in the past, this class with likely present some new ideas and some challenging but manageable homework assignments. For those who have not had prior coding experience outside of the prerequisite course, make sure to frequently go to office hours for help, unless you consider yourself to be an extremely quick learner. The pace of the class is relatively fast, so make sure to stay on top of things.
I was very interested in the topic, so I enjoyed the course. However, I thought many aspects of the course could be greatly improved.
The assignments were very enjoyable to code, particularly the last four.
This could be a challenging class overall, especially when Jesse teaches it. However, if you go to the class and understand the materials, you can actually improve your coding skills and thought process.
The lectures weren't as helpful as the discussion classes, but the professor was very accessible as were the TAs. The exams are short but kind of hard.
Lectures were not very applicable/useful to me but the homeworks really helped challenge my understanding (as someone who has previous coding experience). Tests weren't that bad but punished silly mistakes (1 mistake could easily be 5% or more).
I enjoyed the content of the course for the most part. It was sometimes dull but on the whole I'm happy I took it
This class is a great introductory course into learning C++. You learn the nuances of object-oriented programming, classes, memory allocation, and C++-specific utilities such as pointers. The lectures are dry and seem to drag on (I had trouble focusing for the entire 80 minute period), but the lab sessions and homework programs are very stimulating and informative.
I was interested in learning a new language but while taking it I was unhappy with it. The course did not do a good job of teaching me.
The 70% homework project grades. I wish that more EECS classes are like this because programming by art cannot be done once. Knowledge is important, but debugging is a crucial aspect where we learn from our mistakes.
Group assignments are just the worst. Find someone you can trust to work with you on this and use the TA hours--if the person bails on their work this class will be endless torture. The material learned is useful and the exams test in a reasonable way.
Jesse is definitely more helpful in person and if you go to him he is good at explaining things. Definitely go to office hours for this course, it is absolutely crucial.
Tov has strangely formatted lectures which involve live coding, which doesn't seem to appeal to most people I've spoken to. His online grading system for the homework was pretty ok, but sometimes the tests didn't work on code that was functional due to CLion compiling things differently on Macs vs PCs. Make sure your partner has a Mac/Linux if you don't so you can avoid the sadness that comes from having to ask him to reopen an assignment because you swear the code works on your computer.
The HWs were often very confusing and had mistakes on them, without piazza there would consistently be many missing instructions for HW assignments.
Most of the aspects were important to me.
Tov is probably one of the worst *instructors* that I've had here in terms of pure teaching ability in lecture, but he is one of the fairest and most reasonable professors I've had here. His lectures weren't interesting and quite painful to sit through, and I ended up teaching myself the course through Sarah Sood's 211 lecture slides (which you should take instead of this class in the fall or spring). However, the exams were very fair, and they are not meant to trick you in the slightest. They are very straightforward. The PSETS are very hard, but they teach you a lot, definitely go to office hours, because the TAs are super helpful. Tov is a really reasonable person, he just can't teach effectively unfortunately.
Jesse can often move fast in class, but he's definitely willing to slow it down as long as you speak up. This class isn't too difficult especially because 70% of your grade is determined by how well you do on your homework.
Intellectually challenging course. Homeworks can be tough but are meant for you to succeed and learn by doing. Jesse may be a poor/unengaging lecturer but he truly wants his students to succeed and his very helpful answering questions
The best advice I can give: TA hours. They were probably the saving grace for me in this class. I really would have failed this class without them, no joke. Professor Tov is one of the nicest professors, letting you resubmit code if there was an error in the code that made you fail a lot of tests. I still do not like the written style midterms and wish there was a way to be tested by actually making code on a computer. Overall, this class is not difficult if you take advantage of TA hours and do not wait until the last day to write the code.
I got very little out from lecture because of how disorganized it was. That said, content of the course is important to know.
This course was designed for people with a moderate to high understanding of C++. I found the classes to be way too difficult and the assignments were way too difficult as well. My partner and I would spend 20+ hours on the homework and attend office hours and felt that the content was over our heads. The powerpoints were unclear and the code that was embedded in the lectures was unorganized.
Tov knows his stuff, but sometimes struggles with properly teaching it during lecture. Make sure to go to Office Hours so you get a proper understanding of the material.
For those who have taken AP Computer Science A before, this class is basically more or less a repeat of the class in C++ (so + pointers and memory management). Overall, lectures were decent, but most people didn't pay too much attention and could still get by. Find a partner who is willing to split work evenly for homework, as some of the later homework assignments do take a while to complete, albeit they are not extremely difficult. There is a larger than usual focus on testing, that is, a large portion of your grade is focused on whether you have specific tests or not, which can make testing a bit tedious. Jesse is quite nice on extensions and minor mistakes, so don't feel shy to reach out to him outside of class!
Classes in Computer Science are always classes in which most of the learning takes place through homework and studying, which makes Tov's fairly ambiguous, clumsily made homeworks a fairly large problem. Like any EECS class, lectures are tolerable but not amazing, and you learn both annoying and cool techniques, but the badly made homeworks make the difficult transition to C++ and the learning of the more complicated concepts unnecessarily difficult, so it is probably wiser to take 211 with a better teacher if possible.
This class was a bummer. On the first day of class, Dr. Tov scared everyone by jumping directly into Shell. The rest of the quarter did not improve; the professor would blaze through code, and ask, "Are there any questions?" Before the stunned students had time to formulate their questions, he would answer, "good!" and keep chugging on. Dr. Tov spends much of his time walking us through classes and concepts that are entirely irrelevant to the homework. We had to write a lot of unit tests. This has the good intention of forcing students to think about edge cases; however, it proved to be rather tedious, time-consuming, and unnecessary. It also had the drawback of docking points from assignments even when students passed all the instructor's tests but forgot to write a specific test on their own. EECS 211 should not have been difficult if it was explained properly. However, it ended up being a royal pain.
This class made me want to drop the CS major. It was boring and lots of repeated material. Projects weren't very interesting and the instruction was not engaging and kind of all over the place
It is a great class for C++ lovers. However, I feel the professor was not that great at teaching.
It was an okay class, I enjoyed it and the material was pretty interesting
This course is much better than EECS 111. C++ is a much more fun language to learn. Jesse is smart and nice, but not great at communicating the important concepts clearly. Programs are challenging but doable if you make the effort to meet with TAs. Utilizing Piazza is also important and the instructors and students are very active on it.
Don't take it with jesse. The homeworks are really hard and its frustrating because the last 4 build off each other, so if you screw up the first one you cant do the other ones.
Try, try, try. I learned that in order to gain a mastery of a language, I needed to practice.
The point of the course was to teach you C++, and in my opinion it did it well.
This course feels completely different than 111. I didn't know what was going on for 95% of this course.
This is a fairly straightforward class covering most of the same topics also covered in a typical AP Computer Science course but in C++ instead of Java. Homework was straightforward, but did not facilitate much learning. Exams were quite easy.
The course was very fast-paced, but a great introduction to a real programming language. While we learned the basics of C++, we also learn how to think about building programs and abstracting methods for efficient program design. This is a really self-motivated class, so if you don't go to lecture/write your own homework code, you won't understand the content. It feels hard to catch up once you're behind, so stay on top of the workload, force yourself to focus in class, and complete all the labs and homeworks.
This course is poorly organized. Your grade is largely based (70%) on the homework assignments, which may seem like a good thing. The homeworks are cumulative projects. Each assignment relies upon a perfect score on the last assignment in order to do well.
I think that this course was really interesting and helped stimulate my interest in computer science. that being said, i think the assignments were too difficult for an intro class.
I think this course offers a lot of important programming concepts, not to mention the relevant language of C++, but the teaching style was always going over a few slides then coding for the rest of the 80 minute class, which was fine for me, someone who had 2 years of coding experience in high school, but not as helpful for beginner coders learning these concepts for the first time and trying to understand them while also following along with the code being quickly written on the screen. However you are allowed to do homework in pairs which is nice and encourages people to work together to figure it out which is great.
It's okay.
Professor Tov was a really great instructor and made every effort to clarify anything that is unclear. It could be said the class is lacking a bit of a structural organisation, however it didn't adversey affect learning experience. Also professor was really kind and would be happy to discuss your hw/test, extend a deadline for you if you have a reason, etc.
I couldn't understand them.
Lectures were helpful at all. I recommend skipping lecture and just going to office hours to get the work done. Exams were relatively easy
Get a good partner if you are doing partner work. Mine quit and it caused huge problems for me and the class.
The wordings used in homework instruction was so unclear that most of the time I'm just confused about what to do. Codes that were never introduced were often used in the codes that the instructor has written so most of the time in the lecture I just sat there without knowing what is going on.
It's a nice class for introduction to c++ and Jesse has explained some complex ideas pretty well in lecture. However, I think the homework can be structured to make it less confusing for some part.
Decent class overall. Homework is reasonable since Tov provides starter code that organizes the overall program. Midterm and final were both straight forward but tricky at times. However, class instructions are quite unclear, as he codes really quickly and expects you to be able to follow. Instructions for homework is also sometimes unclear, but having more than a dozen TA sections certainly helps.
Make sure to start the homeworks early! The first few were not particularly challenging, but they become much more difficult towards the end of the course. Take advantage of office hours and Jesse is very accessible. The tests are not particularly difficult or weighted heavily. Get the homeworks done!
Good project assignments, liked how projects worth more than tests
This class essentially teaches you how to code in C++. Overall, the class is not very difficult and grades are based on 7˸ homework assignments (10% each) and 2 midterms (15% each). Tov is a decent teacher although his classes can be boring and hard to understand at times. To be honest, going to class, while recommended, is not really necessary. All in all, it is a standard EECS 200 level class.
It was an okay class. A lot of material and challenged me fairly well, but Tov's teaching style was a little dry
The class was fairly simple at the beginning, but had a marked jump in difficulty halfway through and the instruction did not always match the homeworks
This course was great at challenging me intellectually, as well as teaching me, because I went from nearly zero programming experience to a substantial amount in this class. I often had struggles doing the homework, but the tests were decently easy.
Jesse is a smart and nice guy, but lectures tended to be overwhelming and hard to understand
Learnt a lot as a non-CS major and C++ is a really useful programming language. The class was challenging and some homeworks required quite a lot of work but it was worth it.
I had to take this for CS major, but it got very hard in the middle. The homeworks are much harder than the exams.
The lectures for this course felt unnecessarily complicated and were not engaging. Slides were brief and often led into live coding for the second half of the class, which went by so quickly that it wasn't actually informative. Professor was nice, but not a good lecturer- take this class with another if available. Homeworks were time-consuming and often required assignment clarifications on Piazza / frantic OH visits on the days that they were due.
Jesse's lectures are really impossible to follow along with. I don't really understand how so many people get C++ but in general, a really useful class that teaches you a crucial CS skill.
Yes, it was challenging
Lots of emphasis on homework, not too much on exams. Lecture not too helpful, mostly understand material when doing the HW problem sets.
I didn't love this course because it took a ton of time, and I felt that going to lecture was pointless, which I don't think is the feeling I should get i a class is really stimulating. However, looking back on the stuff we learned in the beginning, I feel like I have learned a lot in this class that will be extremely helping in my Computer Science major.
The homework is pretty challenging and time consuming.
The pace is fast but Prof. Tov is very accessible and helpful.
Tests were straightforward, but challenging. HW was extremely time consuming.
I would high recommend against taking this class wth Tov. He explains basic ideas in a confusing, convoluted way and incorporates too much jargon. Because the lectures are so hard to follow, the homework are really tough, and take up a ton of time. Also, the grading of the homework is really rough because the instructions are very vague.
Start your homeworks early, go to office hours early in the week
I really enjoyed this course. Jesse was a fantastic lecturer, and I enjoyed the homework assignments.
I wish that the topics were covered more in depth. In my opinion, it felt like the course was taught more as a review for people who already knew the material as opposed to teaching the new material, and as such the course didn't properly explain certain things and I spent a lot of time on online websites learning new concepts.
Jesse is amazing and super smart -- he really cares about his students. Although his lectures are not super organized and go way too deep into the content, he's really good at helping us learn through homework.
A super helpful course. Jesse was one of the most understanding professors I've had. He helped beyond class, he gave me tips on finding internships and lab work. He was super understanding when we needed extra help.
Learning how to code, different structures used in coding.
The course challenges you with the projects that it's giving.
You'll learn C++. I thought it would be worse, but it was actually not that bad. Start the homework early.
You learn the basics of programming in C++. The homework are difficult and require a lot of time in office hours but the tests are straight forward and if you know the basics you will do fine.
I wasn't able to learn well with this professor. I couldn't follow the lectures at all. The HW and labs were more instructional, and I was only able to do them because of previous programming experience. The HW takes a while to debug but overall an OK course. Try to take with a different professor. Midterm and final were reasonable and not too much of your grade.
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        1        1.0%
Communication        1        1.0%
Graduate School        0        0.0%
KGSM        0        0.0%
McCormick        47        47.5%
Medill        2        2.0%
Music        1        1.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        47        47.5%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        61        58.7%
Sophomore        30        28.8%
Junior        8        7.7%
Senior        4        3.8%
Graduate        0        0.0%
Other        1        1.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        2        1.9%
Major/Minor requirement        88        83.8%
Elective requirement        2        1.9%
No requirement        12        11.4%
Other requirement        1        1.0%
Respondent(s)        104        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        1        1.0%
2        2        1.9%
3        8        7.7%
4        26        25.0%
5        34        32.7%
6-Extremely interested        33        31.7%




 Northwestern
Student Report for Sara Owsley ( EECS_211-0_20: Fundmtls of Computer Prog II)
Course and Teacher Evaluations CTEC Spring 2018
Project Audience 203
Responses Received 156
Response Ratio 76.8%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction, republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Fri, Jul 13, 2018
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        152
Mean        5.66
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        154
Mean        5.20
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        153
Mean        5.37
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        150
Mean        5.15
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        152
Mean        5.40
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        28        18.2%
4 - 7        90        58.4%
8 - 11        29        18.8%
12 - 15        5        3.2%
16 - 19        1        0.6%
20 or more        1        0.6%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
EECS 211 is not an easy class coming from a background without any programming experience. Professor Sood does a good job of breaking down the content in slides and then applying it in the homework programs, which makes learning the content fairly straightforward as long as you put in the time. Lectures are definitely difficult to stay engaged in, but that's just the nature of CS lectures.
This course is definitely more challenging than EECS 111, but I wouldn't say it's too hard. Sara is great, as usual. Some of the assignments were a bit frustrating but going to office hours definitely helped.
This course is a great course to learn computer programming and teaches many relevant skills
difficult
This class was hard. I have never been a huge fan of programming, but even though this class was hard I think I learned a lot. I don't think my grade will end up being great in this class, but the amount that I learned about programming and the confidence that I gained from the many assignments is great!
Foundational
Take this course from Sara if you can. She explains concepts extremely well and makes class enjoyable and interesting.
READ THE HOMEWORK SHEET! the homework is super simple if you read what you are asked to do. They explain all of it. Go to office hours if you are confuse. TAKE THIS WITH SARA (Take every class you can with Sara, always.)
This was a great course for learning C++, Sara does an absolutely amazing job at lectures keeping things interesting and engaging! Homeworks can take some time but are great for applying what we've learned in class.
Sara is the best but the exams are definitely hard. Study far in advance if possible!
The class itself is fine, it's hard to pay attention when things aren't directly correlated with the homework that we're currently working on. I would appreciate if the class was taught towards the homework more.
Sara is a really good professor and as long as you get help when you need it, the class is manageable. Use the office hours and the piazza page, they are very helpful.
I took 111 with Sara as well and she is an amazing lecturer and has a really good class structure that really helps you learn the material. In addition to TA's and office hours, all the resources necessary to do well in this class are there for you.
This class was well taught and well structured. Highly recommend.
The class was great! Sara will be one of the greatest professors you'll have when taking a cs class.
I'm so glad I got to take 211 with Sara. She's probably one of the best professors you will have at Northwestern: she's fun, engaging, and knows what she's talking about. If you take 211, take it with Sara Sood!
This class is clearly intended for CS majors, and given that I am an IE major with no coding experience, I did very poorly. I couldn't even spend time with TAs to better understand concepts because all my time was spent with them trying to do the homework assignments.
Overall very good, I like the sequence we followed
I learned a good deal about programming and memory, which is important to my chosen career of CS
Hard but good to take
Sara is very helpful and caring of her students. However, don't expect it to be as easy as 111. I would finish assignments in an hour, but then spend another three in office hours and debugging. Utilize the resources and pay attention in class if you haven't seen this material before.
Great class! I learned a lot and Professor Sood is so amazing. I haven't met such a kind EECS professor before. She is really considerate and helpful and I can tell she wants students to learn regardless of what abilities they have coming into the class
Go to office hours and attend all classes! It's not required, but reading the chapters on the book was really helpful especially after you come out of class and still confused on what is happening (which is a lot of times). Find a study buddy so you guys can popcorn questions while studying together! Was really helpful reviewing for the exam.
I enjoyed this course! Sara is the best professor at NU and she makes computer science interesting. The homework can be difficult and the first exam was harder than I expected, but overall there are so many great resources like Piazza and Sara so you can always get help.
I learned a ton and Sara does an amazing job of explaining topics. Office hours are incredibly helpful.
Class starts of slow, but picks up pretty quick. Office hours always available tho to help
This course was great. I felt that I was able to follow without much issue following EECS 111. Sara is a fantastic instructor and is very helpful when answering questions outside of class.
I found it hard to focus on the lecture in class. However, the book and the peer mentor office hours were wonderful. I went every week to see Yehya, and every week he helped me learn the theory behind the assignments and I came out of the office hours with more knowledge than when I came in. Without these hours I would not have succeeded in the class.
If you’re interested in comes I, this is a good class to gauge your interest. Much more applicable than 111
It was a good course, it didn't matter how you did the hw as long as it gives the correct result.
Sara was a great teacher! Only take 211 with her
Liked this course more than EECS 111. The hw assignments are fun to do; i would suggest to start doing them early. TAKE THIS COURSE WITH PROF. SARA. It's upsetting that there's no curve in this class, but it really helps you understand whether you like coding or not.
This course got a little fast-paced near the end of the quarter. However, the homework programs did not really test any of the topics we learned later on, like templates, STL, streams, overloading. Also, the homework programs had a lot of provided code already filled in, which was helpful for saving time, but I wish I could practice building a program on my own for the homework. Overall, though, I learned a lot in this course, and Sara was a great professor.
This class was really important in giving me a better understanding of back-end programming.
The lectures are rather pointless. You need hands on learning for EECS and that just doesn't come from large lectures.
HARD!! But Sarah is amazing and it is a good course
Sara is the best!! This class was a step up from EECS 111. It was more focused on the details of C++. Assignments probably took me 3 or 4 hours.
This class is taught really well and I there are examples for every concept learned. Sara did a great job of teaching the material.
this is a challenging but really great course. I loved the assignments because they took time but were really satisfying when finished. I also am fluent in C++ now ands really understand it
It was a pretty good class. Sara's great as usual and homework isnt as bad as 111. That being said there is a lot more content than 111 so don't fall behind.
Sara is AMAZING she's a great teacher and definitely challenges you but makes it manageable. The assignments are usually pretty fine (like you have to sit down and focus but they're not impossible to do) but if you get stuck you can spend hours and hours trying to debug your code
It's a C++ class. If you know C++ or have done a lot of programming before, then it will be very easy. Otherwise, prepare to work.
Sara is the reason I took on a CS minor. She is an incredible teacher. I took her 111 in the winter and loved her teaching style. Also, she's very patient when answering questions (which she asks for often) and never makes anybody feel bad for asking repetitive questions - she'll find another way to answer it instead. The course was easy to me, not too conceptually challenging, but very fascinating for someone whose only CS background was 111. C++ is a mess of a language but it was fun to learn and super useful. Exams aren't easy, but they're straightforward. Assignments and exam expectations are all very clearly outlined and easy to understand.
The course was a good way to learn C++ programming and builds upon the previous course well
I felt like this course well prepared me to learn how to learn other languages, which is incredibly useful skill.
Sara is just awesome. Doesn't give more work than is necessary, and in class she is great at explaining things clearly and answering questions. Also just an awesome person to get to know. Absolutely take this with Sara if you can.
Sara is a fantastic professor; super helpful during office hours and willing to provide guidance on anything, from assignments to course materials to future interests/paths in computer science. This class definitely goes deeper into computer science as a discipline and field beyond programming, and I learned a lot about what computer science truly is and means at a fundamental level. This class can be a challenge at times but a worthy one without a doubt.
I thought 211 was just the right level of difficulty. I had to try hard to do well and finish homework assignments, but it was rewarding.
Having never done object oriented programming before and very little programming in general, I found this class to be challenging but rewarding. Definitely doable without any coding experience other than 111, but I really had to be on my stuff to keep up. Everything is given to you in order to do well, but you really have to take advantage of all of it. Sara is great too; I've only had her as a EECS lecturer so I don't have much to compare to, but she makes a huge lecture hall feel so much smaller.
I loved this course! It was a bit difficult to understand, but as long as I reviewed the material right after class and on weekends, I was able to finish the homework early every week! Sara is also extremely approachable with even the seemingly dumb questions I had! This class was so much fun! I looked forward to it every other weekday!
Very interesting to learn about computer science; I think I will switch my major to it.
This class is the next step up after 111. While it is harder than 111, it is definitely manageable and very worthwhile. C++ is a really useful language, and the class teaches you some good general programming techniques and practices. Exams and weekly assignments are similar to what was done in 111; I took the two courses back to back with Sara and felt like it was a very logical jump from one to the other. If you've programmed in Java before, C++ will come naturally to you, especially at the beginning, though after a certain point the similarities go out the window. Also, TAKE THIS CLASS WITH SARA! SHE IS A WONDERFUL HUMAN BEING AND AN AWESOME TEACHER! Overall, would recommend, especially if you enjoyed 111.
We covered a lot of computer science essentials like linked lists and pointers.
EECS 211 with Sara was an excellent class. She made the content very clear in lectures, her office hours were incredibly helpful, and the homeworks were straightforward!
Learning a subject useful in the real computer science world for the first time, which was nice. Assignments and class times were enjoyable to complete and attend.
It was a pretty standard course with 2 midterms and a lab every week, but definitely a step up from 111 in terms of difficulty.
Great class. Learn a lot of important material that prepares you very well for later courses.
This is a great course. It is challenging, but it's fair and extremely interesting. Sara is absolutely incredible.
This class was a lot harder than EECS111 the programs were tough and it was hard to get caught up once you fell behind. Sarah does a really good job at explaining, just something you really need to practice
Sara is by far the best professor I have had at Northwestern. She explains concepts very clearly and highlights why things are important for us to learn. It is clear that she cares about her students because she is always happy to answer questions in class and is welcoming at her many office hours. Visit her even if it's just to chat! That said, 211 could be better designed as a course. The weekly programming assignments are not quite enough to get practice with concepts from class, especially those taught at the end of the quarter. As with 111, the code structure has been designed for you, and you are really just implementing small pieces. It would be nice to see projects that allow us greater creativity.
The class size is very large, but Professor Sood did a great job managing class size and teaching all necessary material for exams.
Tough class. Make sure you go to class and office hours. It's hard to come back.
Take 211 with Sara Sood. She is a great lecturer b˼ she is organized and has clear examples. Not a CS major, so this class is the reason why I learned how to code at NU.
Very easy if you pay attention in class, ask questions if you're confused, and do the review sheets before the midterm. This quarter there were 8 coding assignments (weekly), 2 midterms, and an extra credit assignment that make up your whole grade. Also, Sara's office hours are suuuuper helpful! (Sara is just an amazing professor in general also)
It was a challenging course for me but I learnt a lot
Solid class but the tests can be a bit unfair, missing one multiple choice question can drop your grade by a letter
Sara is one of the best teachers at Northwestern. Her examples are very good and the course is very fair.
Good
You learn to code. Nuff said.
You do learn the language, but it's hard to concentrate in the big lectures.
I liked how the assignments gradually built upon each other. They were the best way to test if I was keeping up with the lecture material.
The class explained both practical and abstract topics related to the subject very well.
This is a really helpful class to learn the basics of CS and the homework assignments can be difficult but they are very helpful for learning to concepts. The tests can also be tricky bet they are very fair.
Overall a good class. Sara is hands down the best EECS professor so take all the classes that you can with her. Sometimes this class could be conceptually difficult since you have to understand how programs are executed and stored in memory rather than simply writing programs without considering how the computer interprets everything. The exams aren't bad either, and it's not too hard to get a good grade in this class if you enjoy computer science and put in the work.
This class is great, but it's definitely difficult if you're not comfortable programming in C++ when you come in. It's super rewarding, and I strongly suggest it if you have any interest in programming.
It allowed me to know another language.
EECS 211 is great with Sara. Her presentations and teaching are very helpful for learning and also the multiple in-class examples really help you understand. The programming assignments let you put what you know to practice and thus those were also really helpful. I'm not sure Unix is necessary though so I would take that out of the curriculum, but besides that it was a very helpful and insightful class.
211 was great! Sara is an excellent professor and I would highly recommend taking it with her. The exams and difficult but the programs are manageable.
Definitely a harder course than 111, but well organized and well taught. Lots of resources for help!
Sara is a great teacher, and the assignments given really help you understand the course material.
sara was great as always, much faster than 111 but go to office hours
I really liked this course! Sara is great and its easy to come into after EECS 111 with her. Such a good class & lots of support outside of class.
Sara is great. Big classes are hard to pay attention
Sara is a great teacher and this class is great. The homeworks aren't that hard even if you're not that experienced with programming and the peer mentors are very helpful.
Very happy with the course, Sood's a wonderful professor and well suited to teaching the introductory CS courses and encouraging commitment + confidence in the subject.
learned a lot and challenged while succeeding
The tests are kind of difficult just because writing code on a piece of paper without a computer is difficult.
Take this with Sara! She's a fantastic lecturer.
Great course. Taught a ton of fundamentals that are necessary for computer science. It's taught in a way that makes the material seems really accessible.
Sara is a very good professor and she always teaches with examples of code which are helpful for understanding the concepts. This course (especially the homeworks) is not hard at all if you have some background coding
Course is interesting and teaches you important essentials of C++ programming. Homeworks don't take more than 2 hours per week on average.
A refreshing, super-applicable class after Racket (111). Sara is incredible, as I'm sure you've heard time and time again. It's easy to not want to go to class after the first midterm, especially if you've had CS experience and do well (since it's for/while loops, basics, etc), but DON'T STOP GOING TO CLASS. Homeworks get harder as the quarter progresses: start them early, because last-minute coding on a Friday night is very stressful, and debugging always takes longer than you think.
Easy if you've done C++ or really any OOP before. Pointers are the only thing that were new to my former-programmer friends. Those who hadn't done any programming outside of 111 seemed to have a difficult time.
Over ehh, 111 was better taught and while C++ is more useful it loses clarity when you're not apply the things you learn directly.
I enjoyed how the class built on EECS 111
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        3        2.1%
Communication        6        4.2%
Graduate School        1        0.7%
KGSM        0        0.0%
McCormick        90        62.9%
Medill        1        0.7%
Music        1        0.7%
Summer        0        0.0%
SPS        0        0.0%
WCAS        41        28.7%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        116        75.3%
Sophomore        25        16.2%
Junior        9        5.8%
Senior        2        1.3%
Graduate        2        1.3%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        9        5.6%
Major/Minor requirement        130        80.7%
Elective requirement        6        3.7%
No requirement        16        9.9%
Other requirement        0        0.0%
Respondent(s)        154        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        1        0.7%
2        6        3.9%
3        15        9.8%
4        27        17.6%
5        45        29.4%
6-Extremely interested        59        38.6%




 Northwestern
Student Report for EECS_336-0_1: Design &Analysis of Algorithms (Jason Hartline)
Course and Teacher Evaluations CTEC Spring 2017
Project Audience 84
Responses Received 29
Response Ratio 34.5%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction , republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Thu, Jul 13, 2017
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        27
Mean        5.44
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        29
Mean        5.24
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        29
Mean        5.62
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        29
Mean        5.76
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        27
Mean        5.26
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        0        0.0%
4 - 7        2        6.9%
8 - 11        7        24.1%
12 - 15        16        55.2%
16 - 19        3        10.3%
20 or more        1        3.4%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
This was one of the hardest CS classes I have taken at Northwestern. I'm very glad I took with Hartline as I learned a lot. The class has gotten easier than it was in the past but the weekly homeworks and peer reviews can be brutal. Leave some space open in your schedule and find a good partner before taking this class.
This is by far the hardest class I have ever taken. That said, I think it is also one of the most useful+rewarding ones.
There are a lot of EECS courses I have felt were unnecessarily hard and time consuming. This is NOT one of those courses. Hartline's version is hard as hell, but you will learn so much taking it that it is 100% worth taking. I genuinely feel more intelligent having taken this class and highly recommend it to anyone willing to put in the work.
Hard, hard class. Jason fixed a lot of the issues now, so it's hard because algorithms are hard, and not hard because they're trying to screw us. With that said, expect to spend a lot of time on this class, because it's really difficult to do well. You will learn a lot, though, and will come out a much better computer scientist.
The course was very well organized and taught exceptionally.
This course is a lot of fun. You learn interesting techniques and solve many fun problems. Hartline is also a wonderful instructor. I was not a huge fan of the peer grading, though I do recognize that it probably did help people who had trouble evaluating proofs.
I think we also need some courses covering some basic aspects.
Topics were well motivated, and by the end followed a progression that seems natural. The course provided a framework for thinking about and designing algorithms that will be useful in my future work.
The design recipe style and the very clear guidelines provided in this course is very helpful


It's not super math-y (in sense of the requirements in the homework), but good


I think peer reviews have both pros and cons; good: try to demand oneself to write the homework description in a clear and checkable way; not that good: the reviews aren't always helpful as there might not be comments (when there should be); nevertheless the grading system is good and effective and fix those review score
Jason has gotten a lot nicer this year. The class is also significantly easier than it was in past years. It's still challenging, but not unreasonably so. You should absolutely take this instead of 335: it's much more useful.
I enjoyed the course. Teach the thinking and concepts, not just providing us with a bunch of algorithms. Also peer review is a great idea!
HW's are 2 Problems per week (Range in difficulty) plus MechTA Peer Reviews. Peer reviews are weighted just as much as HW.
This class is interesting but very, very hard. The homework problems are extremely challenging.
Professor Hartline is a great instructor, and I think he cares about his students. That being said, you will get left by the wayside real quick, if you cannot keep on top of your stuff. So, put in the effort outside of just the homeworks, and you will become enlightened. 2nd Midterm and Final were much harder than 1st midterm. Professor Hartline's guides to the course materials are invaluable, and they really helped my understanding.
A lot of work but very rewarding if you go into it with the mindset that you will spend a lot of time on this class. Peer reviews are graded, so cross your fingers and hope you don't have to grade an international student's homework.
Learned a lot, I dislike the pair reviewing, but the content of the lecture is very good and definitely worth your time. The only suggestion for this course is "take it".
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        0        0.0%
Communication        0        0.0%
Graduate School        5        18.5%
KGSM        0        0.0%
McCormick        16        59.3%
Medill        0        0.0%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        6        22.2%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        0        0.0%
Sophomore        5        17.2%
Junior        8        27.6%
Senior        3        10.3%
Graduate        13        44.8%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        2        6.7%
Major/Minor requirement        21        70.0%
Elective requirement        3        10.0%
No requirement        4        13.3%
Other requirement        0        0.0%
Respondent(s)        29        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        0        0.0%
2        1        3.4%
3        1        3.4%
4        6        20.7%
5        11        37.9%
6-Extremely interested        10        34.5%




 Northwestern
Student Report for Konstantin Makarychev ( EECS_336-0_1: Design &Analysis of Algorithms)
Course and Teacher Evaluations CTEC Spring 2018
Project Audience 80
Responses Received 52
Response Ratio 65.0%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction, republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Fri, Jul 13, 2018
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        52
Mean        4.12
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        52
Mean        3.87
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        52
Mean        4.25
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        52
Mean        4.75
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        52
Mean        3.62
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        3        5.8%
4 - 7        22        42.3%
8 - 11        22        42.3%
12 - 15        2        3.8%
16 - 19        2        3.8%
20 or more        1        1.9%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
Algorithms is a very important concept to learn, but I felt that I was not able to get the most out of the class. Lectures were hard to follow and understand, which resulted in a high dependence on hw assignments to learn the material. But because it was so hard to follow during class, most of the material was learned in TA office hours. We spent the first 5 weeks on greedy algorithms and breezed through the other material. The course felt badly organized, as we even spent a lecture going over material that was covered the previous week because one student voiced that they did not understand it. It felt like a waste of time to go to class, and while the prof is a very nice. he was not very good at explaining the material. The hw assignments were nice because there was a programming aspect to it, which gave the course more concrete problems to solve. The two midterms were short answer problems on greedy algos and dynamic programming, and they were very difficult. The final was a complete change in structure, as we were not tested on proofs but of algorithms such as finding the cost of minimum spanning trees. It was much easier and we knew what to expect.
This offering of algorithms was really reasonable -- there was plenty of resources to understand the material like discussion section, office hours, and a good textbook, good structure in weekly homework assignments, and good communication to help us to be prepared and succeed.


The homework accounted for 44% of the grade at the end, which meant that you could do reasonably well by doing consistent good work, despite messing up on a few questions during midterms.


For a grad student, the work load was reasonable. I think the pacing was adjusted for the class, but lots of time was spent on greedy algorithms, and less time for other topics.
Algorithms was actually pretty fun. Not too hard with very exciting problems. Konstantin really cares about his students and wants you to learn. One of the nicest professors ever.
Algos with Makarychev was definitely not as hard as this class if often portrayed to be. I think Makarychev did a good job of making the class more accessible to many, but in the mean time it seems like we lost a lot of material from the syllabus. Only the second midterm was hard- the first midterm and final were pretty manageable. No need to be afraid of this class with Konstantin.
This was a strange run of algorithms. We only had 6 assignments, 5 of them were on greedy algos, and none of it was excruciatingly hard. The midterms were challenging but fine, and the final was short answer/T˿. The communication from the instructor was incredibly frustrating, often questions about important logistics would be asked multiple times on piazza and would go entirely unanswered. All announcements in class were often vague as well, and that made things really confusing. Lectures were also hard to follow.
Decent course. Professor was somewhat confusing lecturer, but was accessible to students and seems eager to improve.
Go to office hours for help on weekly problem sets! There were three exams this quarter, the last multiple choice. Exams were pretty hard in general.
This class is great for anyone looking to get into technical interviews or anyone interested in famous algorithms like the Knapsack problem. I feel like this class has something that everyone will find interesting.
Professor is kind and knowledgeable but is disorganized overall.
This was a fun course that taught me problem solving methodologies.
It's a bit rushed and disjointed because the professor is still trying to figure out the best curriculum. Lectures can be dry, the problem sets get harder throughout the course, and the midterms are super hard but the professor really wants the students to learn, so the curve is generous and the final is super easy.
TAKE THIS COURSE WITH KONSTATIN. He has made this course very doable in comparison to other professors here, adding also a coding component instead of just raw theory which helps to make the transition.
Challenging course with homeworks, 2 midterms, and a final. Homework is doable, but the exams are rather difficult.
The course was not paced very well. It's a shame; this algorithms class could be so much better.
Lenient grading, good test cases provided to run your program against.
The explanation to the materials is not well presented making it quite hard to understand. I normally can find some other explanations on internet which are way simpler and more clear. I am repeatedly shocked by how such a simple stuff can be explained so confusing. The TA never gave full solution just drawing some basic idea on blackboard. While, the grading criteria seems require very detailed solution and can vary much between different graders.
Professor Makarychev is the man. You can tell he genuinely wants you to learn, and given the complexity of the material, he tends to present it in as understandable a way as possible. The content itself is interesting, but there is a bit too much of a focus on greedy algorithms. Dynamic programming was interesting, but it wasn't covered for very long... All in all, great course.
I'm unfortunately really disappointed with this class. For context, I had dropped this course the quarter prior, and this time around some positive changes were put in place (but unfortunately not enough were made). My main struggle with the class was the lack of helpful resources for students. Slides were severly underdetailed, making it very hard to study for exams. Professor Makarychev moved at a very fast pace, and sometimes verbally explained algorithms without diagrams or slides. If you got lost early on in the lecture, there was little chance youɽ be able to catch up without asking lots of questions. As well, there were practically no formal introductions to the techniques of how to prove algorithms, which forced students to have to deduce strategies or terminology either from class examples or online resources. I know from fellow students that professors who taught this course in the past used to have handouts explaining strategies to develop proofs; there was no such resource in this course, but we were expected to use these strategies nonetheless. Getting feedback was incredibly slow, as homeworks˾xams took on average more than a month to get back. Tests were incredibly difficult, one of which only had a single question, and I know of many students who were caught off guard by the exams. Professor Makarychev does care about his students, as shown by his willingness to answer questions and provide opportunities to earn back credit, but I really hope he takes the time to revise the course in a way that focuses less on specific examples of algorithms and more on actually learning how to design and prove them.
I didn't learn about as many topics as I would have liked. The teacher went really slow, so I only really got to spend lots of time on greedy and DP algorithms. Homework was easy; exams were much harder.
Algorithms are a very fascinating subject, but only if they explained well. The professor is a nice guy and means well, but the structure and organization of the class are abysmal. Lectures are usually not worth going to. It seems often that the professor is not quite "in touch" with the student perspective and doesn't realize what is and isn't challenging to students. Reading the book generally does a better job
This class was hard. Weekly assignment, 2 extremely difficult midterms and a pretty easy final. It was challenging throughout, every single assignment challenged me and it took the full week to come up with solutions. However, it's extremely satisfying when it works out and you find one because you feel like you are truly learning, and learning very prominent information for your future (if computer science).
We spent like 6 weeks learning about greedy algorithms and then 2 weeks for DP and another 2 of misc lectures. Going to lecture wasn't that useful since it was quite slow and repetitive but the exams are pretty easy and Konstantin is a very smart guy so Iɽ recommend you take Algos with him.
THIS CLASS IS HARD. Granted, I don't like theory and that has a lot to do with my view. This is the only theory class I've taken here so I don't have anything to compare it to but the material is often confusing and difficult to apply to new questions/situations. The professor is good though, he really wants his students to understand and is really nice when you ask him questions about anything.
I have mixed feelings for algorithms with Konstantin. We had 6 homeworks, 5 of which were on greedy algorithms, which is essentially the first half of the course. Alright, fine. The first two midterms were very challenging, and the second focused on dynamic programming, which we sort of rushed through and no one understood. However, the final is more objective⿪sy, and the grading˺ssignments could have been worse. Definitely not as nightmarishly hard as what previous quarters of this class have been. Still, one could always hope to get more out of a core class for all CS majors.
Seemed to be a hard quarter on the professor. Homework covered only greedy and dynamic programming since lectures kept on being pushed back due to unclear communication and teaching. I don't think Markarychev is a bad professor (he's great in office hours), but students don't like his lecture style and as a result resort to self-learning and self-teaching. Take this class if you want a relatively easy grade, but take it with Hartline if you want to learn more.
Take this class w/ Makarychev. This class was not nearly as bad as I expected. The assignments aren't super easy, but by no means awful. Basically, this class is about practicing designing algorithms (and proving that they're correct), not about facts. It's getting better at thinking in this way. I hated 212, and this class wasn't nearly as painful.
Take this class with Makarychev, he really cares about the students doing well, and the class is very manageable (seems like less work than with the other professors).
This seems like an important class to take but we didn't cover that many topics so I didn't learn as much as I expected to.
Taking this class Makarychev is probably easier than with Hartline, but I also feel like we didn't learn that much, which is unfortunate for a college-level computer science algorithms class. We spent a lot of time on greedy algorithms and not much else. Kostya is also quite a dry and boring lecturer, and his smooth Russian accent put me to sleep more times than I want to admit. Madhav, our graduate TA, was awesome though! I ended up mostly learning by going to his weekly discussion sections instead of going to lecture itself.
We didn't cover nearly enough relative to what we should've learned in this class
I really enjoyed the course. Some people were saying that Prof. Makarychev's accent is a bit unclear however I found it just fine.
Midterms were tough, especially the second one (open notes, creative problem solving), but the final was straight forward if you study for it (closed notes, lecture material based questions).
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        0        0.0%
Communication        2        4.1%
Graduate School        6        12.2%
KGSM        0        0.0%
McCormick        31        63.3%
Medill        1        2.0%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        9        18.4%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        0        0.0%
Sophomore        16        30.8%
Junior        26        50.0%
Senior        3        5.8%
Graduate        7        13.5%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        5        8.8%
Major/Minor requirement        45        78.9%
Elective requirement        3        5.3%
No requirement        4        7.0%
Other requirement        0        0.0%
Respondent(s)        51        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        2        3.8%
2        2        3.8%
3        6        11.5%
4        18        34.6%
5        14        26.9%
6-Extremely interested        10        19.2%




 Northwestern
Student Report for EECS_213-0_1: Intro to Computer Systems (Zachary Bischof)
Course and Teacher Evaluations CTEC Winter 2017
Project Audience 104
Responses Received 75
Response Ratio 72.1%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction , republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Mon, Jun 26, 2017
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        72
Mean        3.14
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        73
Mean        3.33
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        72
Mean        4.43
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        73
Mean        4.96
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        72
Mean        3.03
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        1        1.4%
4 - 7        16        21.6%
8 - 11        21        28.4%
12 - 15        25        33.8%
16 - 19        9        12.2%
20 or more        2        2.7%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
Needs to be taken
This course gave me an in-depth look at computer science.
This class is hard. Very hard.
The class felt disorganized and lectures were confusing. A lot of the studying was done on my own time through other resources.
Most of the time, this class made it feel like I was solving puzzles.
Hard, poorly organized course. Happy to walk away with a better understanding of how a computer actually works, but labs were horrible, and it was never clear what was important during lecture. Midterm / final made up a little by being fairly forgiving. Overall, the adaptation of a semester-long course from Carnegie Mellon to a quarter at Northwestern does not work smoothly. Frustrating for most of the course, but occasionally rewarding.
You probably don't have a choice whether or not you take this class but it's not that bad. Would highly recommend taking 203 and/or 205 before hand - will definitely help a lot.
This class is really difficult. The exams were actually fine, and the homeworks weren't bad either, but the labs were really hard. You will need to spend a lot of time on the labs and consult heavily with TAs and/or Google.
The professor is nice, but he is new, so no harsh judgement.
It was very difficult and the labs were extremely time consuming and often didnt go hand in hand with what was being learned/taught in class
Prof Bischof is a good guy and seems to genuinely care about students' learning, but his lectures were confusing. I had to learn most of the material by reading the textbook.
The homework assignments were reasonable. I was hoping for more homework assignments that would help with the labs. It felt very overwhelming to have these insane labs with no guidance. Many things were self learnt or learnt through looking at other's people codes because there was no guidance on these labs. Whenever the labs were assigned, it was a given that we would have to figure out everything ourselves, including the concept, language, etc. It was hard to apply things we've learned in class when we're so busy trying to get used to the coding language.
This class was very difficult, complex, and confusing. Professor Bischof was not good at getting main ideas across.
So I thought I would hate this class but it was actually fun, v enlightening as to how computers work under the hood. Just keep up w/ lectures and start stuff early, and it's fine.
It didn't make computer science seem meaningful or fun, everything was extremely abstract.
The labs are really difficult, so you will need to spend a long time on them. I found that it was really hard to pay attention
Course is dry, and required, but good to know.
I mostly relied on the textbook and videos from cmu.
Hard but not terrible. Labs and homeworks are tricky- definitely give yourself time to do them. Bischof doesn't curve and his lectures move quickly and are pretty confusing, so the textbook will be your best friend for this one. Tests are open book.
HORRIBLE LECTURER!! DON'T TAKE IT WITH BISCHOF!
The course material is very interesting. The class is overrated in terms of difficulty. Yes, the labs take some time. No, it is not impossible. The material is very logical and makes sense.
It was Zachary's first time teaching the class and he did an ok job. The material delivery was not very structured in that regard and I started not going to class. He is very knowledgable of the material, just not good at presenting it. He is VERY good at answering questions though.
Labs and homework assignments take a lot of time and lectures are generally unhelpful.
The CMU online lectures are more helpful.
Lectures were not very helpful, the book is your best friend.
This was the teacher's first time teaching, so he was not a good teacher. He clearly knew the material, but he didn't yet know how to explain it. I never went to class, but he posts the slides online so I learned through those.
Hard but rewarding course. Start work early, don't do things last minute. Actually pretty manageable course if you study and do assignments on time.
I felt like I did a lot of self-learning for this class because I didn't learn that much in lectures. The textbook is a useful reference. The four labs are super time-consuming and challenging, but not impossible if you put in the time! The homeworks and midterm are okay. There were a lot of office hours and Piazza is a great resource, so those help with the homeworks/labs. Overall, I found 213 very challenging and not very interesting, so it was rough, but putting in the time𯻿ort pays off.
The slides are extremely dry and confusing. The material is very hard. Pretty sure NO ONE knew what they were doing for the first homework (and probably still don't). 


This professor got confused by his own slides and made an already dry topic even more boring which made learning extremely difficult. I learned more by watching the Carnegie Mellon videos online. The class is difficult but its a major requirement so you just have to truck through. Make sure you get a good partner, because everything is partner based.
A lot of work. Had to teach myself a lot of the material, but the course is based very directly on the textbook and all material/labs are very well documented online.
This class was challenging but interesting!
SO HARD, lecturer is awful, labs are just taken from another university
The lecture gives too little information, and the book gives too much - probably best to keep up with both!
If Bischof is the professor in the future, do not take this class with him. This is a difficult class - in my opinion it is the hardest of the CS prerequisite classes - and Bischoff was not equipped to teach this class. When you take it (because the people who take this do it because they have to) look online for the Carnegie Mellon lectures and use those and the textbook as resources
This is a good course. Professor Bischof is a new professor. However, he is really good and has a ton of potential.
Professor Bischof was really good one-on-one, but not so great in the classroom. It was his first time lecturing, so I expect he will improve with time. The exams were pretty straightforward if you listen in class and read up a few days beforehand. The labs require a good partner, but with that, v doable. It is possible to do well in this class. Go to office hours for every assignment or risk wasting your time.
Super interesting class, but very challenging.
The content is a bit dull and still very abstract, even though the course is marketed as one in which you learn about how the computer "really works". The labs are fun though.
Make sure you buy the textbook. Professor Bischof doesn't teach well, so reading the textbook is crucial to success. The labs are difficult but you'll learn a lot in the process. Professor Bischof does not write or grade the labs or the homeworks, so asking for his help on those matters is often unfruitful. This placed undue stress on the TAs and peer mentors, who often had to teach far more of the course than they should have.
VERY difficult class. Material is very interesting if you're into computer science, but there is TOO MUCH MATERIAL for one quarter. Its understandable because it is supposed to be the necessary basics of Computer Systems but still, very hard to keep up with the lectures. If you push off reading/studying, your FINAL WEEKS WILL BE TORTUROUS because you will have the final to study for, the hardest lab that is known to take 15-50 hours to complete, and a homework assignment. Professor Bischoff is very intelligent, but is not very good at conveying his knowledge to people that don't know/understand the material, which is usually everyone because they haven't taken the class yet.
Great course, this is Bischof's first time instructing, so things were rough and lectures only made the content more confusing; read the textbook, understand the slides, and give yourself lots of time for labs.
Bischoff is brand new and it was his first time teaching this course, so he was not the best at teaching concepts. Watch the CMU lectures and everything will be ok. You will learn so much in this class, but be challenged so hard.
Zach does an okay job, clearly a new professor. Labs are interesting and easy to find material for, homeworks can be difficult. He isn't a great lecturer, it's not really worth going to class. The Malloc lab timing was absolutely, 100% ridiculous. Why would put the hardest lab during finals week? It just is unfair, completely sadistic and utterly deflating. He actively changed the scheduled labs so that we would have the malloc lab last. I am honestly shocked. Also having it due the day after our final? Have a heart.
I think that a lot of ctecs might mention that they didn't go to lectures because they found alternative learning options more effective, in Zach's defense, he did make an effort to teach the concepts and clearly understood them well, but it's very hard to teach better than videotaped lectures of the same content, especially because they give the rewinding option. Also, the way this course is graded, it is much more effective towards assignments/tests to read the textbook exclusively (e.g. content not clear from the slides being tested).
Going to class was pointless because the professor wasn't a great lecturer. Labs take a long time, homework takes a good amount of time too unless you really understand the material, and the midterm placed a lot of weight on material that was only briefly covered. Get a good partner for homework/labs to suffer through this class with.
Lots of content. Some of it pretty interesting, some not so much. Definitely read the book sections before the lecture, and don't put off the lab until the last minute. Good class all in all, good content.
Zach just...wasn't a good teacher. I want to cut him some slack since it was his first time teaching the course (or ANY course, for that matter), but I would recommend taking this class with someone else. Labs are difficult but manageable as long as you START EARLY - each one easily takes upwards of 10 hours.
His first time teaching the course so it was a bit spacy in class sometimes. Start homeworks and labs early. Open note exams make it better, so many practice tests online to study from.
The instruction could be better but given how dense the material is, I'm not sure how well other instructors could have done. I had to do a lot of self studying to be able to start on assignments and labs.
SOS this class was so hard. Labs take forever, but the homeworks weren't too bad. Midterm and final were both open note, but still a struggle. READ THE TEXTBOOK!!!
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        1        1.4%
Communication        2        2.7%
Graduate School        2        2.7%
KGSM        0        0.0%
McCormick        38        52.1%
Medill        1        1.4%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        29        39.7%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        1        1.3%
Sophomore        51        68.0%
Junior        19        25.3%
Senior        2        2.7%
Graduate        2        2.7%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        2        2.6%
Major/Minor requirement        68        88.3%
Elective requirement        1        1.3%
No requirement        5        6.5%
Other requirement        1        1.3%
Respondent(s)        75        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        3        4.1%
2        10        13.5%
3        22        29.7%
4        21        28.4%
5        12        16.2%
6-Extremely interested        6        8.1%




 Northwestern
Student Report for EECS_213-0_20: Intro to Computer Systems (Peter Dinda)
Course and Teacher Evaluations CTEC Spring 2017
Project Audience 53
Responses Received 20
Response Ratio 37.7%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction , republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Thu, Jul 13, 2017
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        19
Mean        4.47
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        19
Mean        4.26
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        19
Mean        5.37
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        19
Mean        5.37
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        18
Mean        4.33
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        1        5.3%
4 - 7        6        31.6%
8 - 11        6        31.6%
12 - 15        4        21.1%
16 - 19        2        10.5%
20 or more        0        0.0%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
If you can, Iɽ recommend not taking this class with Dinda. Despite being able to explain things decently, he is a quite unorganized, which really made me struggle in the class. That being said, don't let him stop you from taking the course. The textbook has a lot of material in it, and with Dinda it's hard to tell which details are important and which aren't.
It was hard, but the office hours were beyond awesome. Professor Dinda is very helpful and enthusiastic about his subject. He'll gladly help or talk to you about more in-depth topics.
You learn lots.
This class was a train wreck. A flipped classroom is a great idea if you're going to execute it correctly-- by giving us lectures to watch outside of class and giving us class time to actually work on things. Instead, we were expected to read a very dense textbook and listen to Dinda ramble for a while-- it's hard to know what you don't understand when just reading the textbook. I love that we were just told directly to go to the CMU website and use their slides instead of Dinda actually lecturing. At least he salvaged it with tons of extra credit and relatively easy exams, but if I'm paying four grand for a course, Iɽ like to be taught, and not just referred to another university's slides. Complete waste of my time and caused so much unnecessary stress.
Good things: No Malloc Lab this quarter. Not so good: reverse classroom so don't really expect to learn much in class but instead by reading hundreds of pages in the text. Required attendance in the beginning was required in random in class-questions instead of a homework grade but the professor stopped asking questions and people stopped coming to class since people didn't really learn from class. I dropped last quarter to take it this quarter, doesn't seem there is a good quarter to take it since Bishoff also couldn't teach very well. Recommend taking Fall if looking for a standard class or this quarter (spring) if you want to self study.
Dinda is a nice guy, but he often goes on lengthy tangents on small subject so the lectures get irrelevant real fast.
One of the harder courses in the intro CS sequence - be warned it takes more time with reading and assignments than 111𯈑𯈔. Check out the Carnegie Mellon slides (http://www.cs.cmu.edu⾯s˼s�mic˼lass�-f15/www/schedule.html) which follow the book pretty closely but are easier to digest. Dinda is a nice, knowledgable guy and I can tell he actually cares about his students' success, but he can have a tendency to drone on about stuff that's already pretty boring, which can make it difficult to pay attention in class
Overall, a really enjoyable class. We had a flipped-classroom teaching structure such that we would read the textbook and come to class with questions. While I would definitely prefer the normal structure of teaching, the flipped-classroom implementation was not as bad as anticipated as northwestern's 213 class is essentially CMU's 213 class save a few lectures. 


The material itself is super interesting as well. You finally get to see how something like the stack and heap work and even create your own parallel program. If you're someone who has an urge to understand what is going on behind the scenes and loves to break down abstractions, then you'll definitely enjoy this class. 


Finally, the labs are all really fun (although they take quite a large amount of your time.)
didn't really like how the class was set up as a flipped classroom. I didn't;t really feel like I gained that much from lecture
Material is very technical and sometimes hard to understand if you don't have a background, but tests and labs aren't too bad. Don't be scared to ask questions!
This class may appear daunting, but you come out the other side with a remarkable depth and breadth of knowledge about modern systems considering that this is a single-quarter introductory course. The labs are a lot of fun, and while the book can be dense at times the subject matter is incredibly cool.
The class is really interactive. Prof. Dinda tries his best to make students participate in the class. However, I think it would be helpful to have straight forward lecture on the materials since they are really hard for students to understand in a systematic way without clear guideline.
Required course. Don't pair with other hard courses.
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        0        0.0%
Communication        0        0.0%
Graduate School        0        0.0%
KGSM        0        0.0%
McCormick        7        36.8%
Medill        1        5.3%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        11        57.9%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        3        15.8%
Sophomore        11        57.9%
Junior        5        26.3%
Senior        0        0.0%
Graduate        0        0.0%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        0        0.0%
Major/Minor requirement        18        94.7%
Elective requirement        1        5.3%
No requirement        0        0.0%
Other requirement        0        0.0%
Respondent(s)        19        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        0        0.0%
2        1        5.3%
3        5        26.3%
4        3        15.8%
5        8        42.1%
6-Extremely interested        2        10.5%




 Northwestern
Student Report for EECS_213-0_20: Intro to Computer Systems (Vincent St Amour)
Course and Teacher Evaluations CTEC Fall 2017
Project Audience 84
Responses Received 58
Response Ratio 69.0%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction, republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Thu, Jan 25, 2018
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        4.83
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        3.81
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        4.86
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        5.45
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        4.33
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        1        1.8%
4 - 7        6        10.5%
8 - 11        11        19.3%
12 - 15        23        40.4%
16 - 19        7        12.3%
20 or more        9        15.8%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
This is a very interesting class. You cover so much material, and I learned a lot about computers that I had always wanted to know. The knowledge you gain is also useful for applying to programming in general. Homework's are reasonably easy, but labs are quite difficult, so start early. Malloc lab is definitely very time consuming, but you actually learn a lot from them and they are pretty interesting in retrospect. There are 4 homework's and 4 labs, plus a midterm and a final. Nikos and Vincent are really good lecturers.
This class is impossible. If you can get out of it, get out. No matter how much effort you put it, you'll probably just scrape by. There are only 5 hours of office hours and they're at incredibly inconvenient times. You're not prepped enough to do most of the labs and the professors are not very forgiving.
213 is a very interesting class, but it's taught very poorly. The class is taken from Carnegie Mellon, including the lab assignments, so you can find all the answers online. While the labs are fun and interesting, they are also incredibly difficult, prompting people to use online resources. The topics learned in lecture are sometimes irrelevant to the hws and don't show up on exams. There is an expectation that you know C very well and the professors don't do a great job of explaining code in C because they assume everyone already knows it
God
It's very difficult and requires very good time management to pull through.
This course is hard. Expect to not do super well unless you put in effort to understand the course material. It is important to go to lecture, but even then it is likely you won't understand everything that is going on unless you do the readings. It is also cumulative as the course goes on, so if you do not understand a concept it is important to try to figure it out before the next class. There are TA office hours every day i believe, so it shouldn't be too hard to find the help you need.
This class is hard. Harder than many 300 level classes. The profs weren't amazing but are the best of the 213 instructors. Having taken and dropped this class the year before, it was much better the second time around, due to better instructors and coming in ready to treat it as my hardest class. Go to class, take notes, make sure you deeply understand all the material. Also, the last lab (malloc) is the single hardest assignment I've faced yet in college. My partner and I started a week and a half early, spent over 40 hours on it, and still turned it in half done. This is a necessary class, but be prepared for it.
While the content of this course was not unreasonably difficult, the labs were definitely the hardest part of the class. The homeworks reflected the content of the course more so than the labs did and were a better indicator of the content of exams. The midterm was extremely difficult but the professors made it up by making the final easier. Definitely get an early start on the labs and homeworks and take advantage of office hours!
This class was very difficult and hard to keep pace with. The lectures were very dry and the assignments are difficult.
I think there is a lot of important material covered in this course and I learned a lot about the bridge between hardware and software and how to use this information to be a better programmer. However, this course has TOO much material squished into one quarter. I think the course needs to be split between two quarters so students really understand the material and have more time for it to click. The labs are also too difficult. Also, this course is just a copy of the CMU course which is frustrating. It is hard to want to attend lecture when you can just watch the equivalent original CMU lectures. It's also hard to respect the teachers and assignments when they just copy from CMU. It also makes people more likely to cheat on the assignments.
The class was quite difficult at times, but is necessary in preparation for classes to come.
Start the labs early and do weekly readings.
I'm not sure how useful this class will be to most people, but it's very hard and not very well taught. Things that come up in class don't always appear in the homework, but do show up on the midterm (haven't taken the final yet, it's gonna be cheeks). Reading the book before class might help if the book weren't made by the same people we steal the curriculum from. The slides and the book are confusing. @profs make sure your TAs know what they're doing so they don't confuse other students
I am so disappointed in this class. Peer mentor office hours were only offered Monday - Friday from 11-12 and another hour on Friday. I had to deliberately skip my other classes in order to make office hours because the homework and labs were tough. There should have been more peer mentor office hours offered maybe in the evenings.
This class is very difficult. I highly recommend reading the book before each lecture if you want to do well. Labs and homework are both challenging, and it is very important that you go to office hours when you have questions.
Obviously a very very difficult class, but the concepts are interesting enough to make the homeworks bearable.
For me, lecture for this course was brutally boring. I thought that the labs and content were actually pretty interesting, but it was hard for me to see how things in lecture were relevant until after I had completed the lab for that section.
Lectures are fast and it's easy to fall behind (although I will say St. Amour is a cool guy and good lecturer), use CMU's 15⼘-213 videos if you fall behind. I'll even link them here for you: http://www.cs.cmu.edu/~213/schedule.html Labs take a long time, so make sure to start early (especially malloc lab). Please please please for the love of Linux find a good partner, ditch your current partner if you have to for another one early on if they underperform, or you will forever suffer like me, have to carry hard through the later harder half, and to do 2x 8-11 hours of work per week while your partner rides on you like a space shuttle on a 747. Class is frustrating sometimes, you'll feel like you're drowning in work and don't know anything, but keep up on CMU's lectures, go to OH if needed (only the TAs who are most helpful, they vary in quality), and you'll make it, I promise.
*Disclaimer: I am not a systems person and found the course material rather dry. So take this CTEC with a large grain of salt.* In terms of assignments: this class was freaking HARD. This is straight-up the most difficult class I have ever taken at this school, graduate math classes included! The bomb and malloc labs are pure evil. That said: the teachers were amazing. They both understand the field deeply, doing a great job of pointing out overarching themes and interesting historical context. Their lecture slides were very helpful and carried me through the class. Nikos' voice is also musical and pleasant to listen to; it helps me not fall asleep in class. Heh.
This class is so freaking hard. Seriously, it will kick your butt. The labs easily take 25+ hours a week and alot of times, we had homework assignments on top of that so it didn't make it any easier. The lectures put me to sleep and I normally don't ever come close to falling asleep in class. Often, I would actually get out of class and go take a nap because of how exhausted I was from trying to learn the material.
Weed out course for cs majors. It's tough and a lot of time and might not seem worth it, but you learn a lot.
Terrible course. Sadly, a requirement for CS. Keep reading for a rant. This course is taught SO badly. First off, I'm a sophomore CS major, and I was completely out of my depth. Not only that, the instructors literally get the slides from Carnegie-Mellon and proceed to quickly read off of them while explaining very little or assuming we already know what the heck any of this even means. There was no proper explanation of any concept, including the labs, which were downright impossible to complete. TA's had very minimal office hours (1 hour per day, during which I wasn't available) and Nikos made it very difficult to ask questions in class, due to his condescending attitude and tone. I struggled immensely in this course, and our averages were awful. I don't know why this course hasn't been redone yet. It's terribly designed and leaves me feeling that I'm not even qualified to do any work relating to assembly, caches, etc. I wish the instructors cared about our success, but from what I've observed, they really don't.
This class is hard. The amount of information you're required to learn could easily be spread into 2 quarters. Probably half of my class dropped after the midterm. If you're taking this class, expect to work hard. By far the hardest CS core class.
I learned a tremendous amount in this class. This class is content-packed and it seemed almost impossible to cover so much content in only 10 weeks, but we did anyways. I think the most important thing to note about the class is that it mimicks the original class from CMU. The slides are a derivative from CMU as well as the tests, homeworks, and labs. As a result, there was plenty of online content to learn from if in-class lectures were not enough. In fact, CMU's own online video-taped lectures was one of the most important resources in this class and worth looking at. There are only 2 classes a week and each 1hr20mins. Thus, most of the learning responsibility is definitely on the student's side. The two lectures are NOT enough to cover all the material and it is extremely important to read ahead and learn. In my opinion, if it were not for the online content for 213, my learning experience would have been very different and I perhaps would have had negative opinions about this class.
It's the hardest EECS class I've ever taken, but it's some pretty interesting stuff. It gets less appealing as it goes on, though.
Avoid this class at all costs! Extremely difficult and while you learn a lot, the skills are so specific that they aren't really that useful. 4 labs that are really tough, 4 homeworks that are okay, and 2 exams that are impossible. Be sure to start assignments early and go to office hours whenever you can.
This course is a very material-heavy approach to system-level CS. It gives you a good knowledge of x86 assembly language and of low-level operations that you don't necessarily think about programming with a higher-level language. There is also a good amount of information and a lab involving low-level security exploits, which was very interesting.
it was hard
This class is not as bad as people may make it seem. Nikos and Vincent are great professors and as long as you go to class, you'll do fine. The readings go hand in hand with the lectures so if you cant make a lecture or you want to get ahead, the book is right there. Homeworks aren't bad and help you learn but labs are sometimes really long and not very productive
Without a doubt, the hardest class I have ever taken in my life, which is fitting because 213 is supposed to be one of the hardest classes you take as a CS major. This class is definitely a weed-out class and was taken from Carnegie Mellon, where it is their weed-out class as well. This class is actually so infamous that I mentioned it to an older relative who is in tech and had never gone to college and he knew of the class and how hard it was just through word of mouth. Moving forward to how this section was specifically taught, I did not like the instruction. The content covered in the class is pretty difficult and there is a lot covered. The lectures were not very clear and were too monotone and lifeless so as to make it hard to focus. Nicos wasn't terrible at explaining things but not great either. As a professor, he does not seem to care that much about his students, helping them, and doesn't really respond to student's concerns about the class in general. I generally would not recommend him as a professor for this reason. Outside of class, it didn't feel like we really had many resources for help. There were a handful of TAs that were amazing and that I owe my grade to but most of the other TAs didn't really know the content well and/or didn't really try that hard to help students. The classwork consists of homework and labs that switch off every other week. The homework is kind of hard but can be accomplished if you really understand the material and/or go to office hours; the labs, not so much. The labs are incredibly hard and the only way I got through them was by putting an incredible amount of time into them and by working together with everyone I know and help from TAs when I could; even then, I am not sure how I finished. The exams are usually pretty brutal; the average on the first exam before an unplanned curve was applied was in the 40s. The second exam wasn't as bad but was only easier in response to how poorly everyone did on the first one. Overall, this class is pretty brutal and does not have any mercy. I would not recommend taking it if you don't have to.
This course covered a lot of material really really fast. The professor was never able to finish all of the lecture and constantly went over time. Every lecture was a new topic, so it was really easy to fall behind. Homework involves: 4 homework assignments (problems about the content learned, not really much coding involved, involves looks at code) and 4 labs (the actually coding part). The labs took a really long time and although they were about the topics we learned in class, it was hard to use the information we learned in class to work on the labs. The TAs weren't really helpful on labs. They were pretty helpful on homework. The tests are open book but that won't really help you, just learn the material really well. All homework assignments are done in pairs, so getting a good partner is important.
This class requires a ton of time and is very poorly taught but it is interesting nonetheless.
THIS IS SO HARD. Unfortunately you have to take it for a CS major/minor. Some of the homeworks and labs are notoriously hard and the exams can be quite confusing. I was very lost. I still learnt a lot. But there was a lot more stuff that I just never quite understood.
I think this course showed a misunderstanding of how students best learn and how much time certain assignments will take. Malloc lab was a huge amount of work and I felt like I was only learning for the first 5 hours I put into it and the next 30 hours I put into it were just fixing seg faults.
The professors are great and really know what they're talking about. Overall, the course material is super interesting, if sometimes a little hard to grasp. Professor office hours really helped me get a handle on the material, so don't forget to make use of them. That being said, this course is HARD. Homework can take a lot of time if you don't understand it and labs can take 15+ hours each. Take notes during lectures, do the reading (The textbook is really good and easy to understand), go to office hours, and start labs and homeworks as soon as they're assigned. Really cool course, a LOT of work.
The professors are pretty bad at making tests that are feasible to finish in the allotted time period. Additionally, the course material itself is just slides that are almost verbatim content from the book.
This is a VERY difficult and time-consuming class, do not take it with other hard classes like 212. However, Profs. Hardavellas and St. Amour are really good teachers.
This class is really hard. The test is really hard and most people do very badly. The labs take a ton of time and don't feel like they're as applicable as the homeworks do. Make sure you keep up on the course work and start early on the labs!!
Everything comes from CMU. Don't bother going to class. Just watch CMU online lectures and you'll be 10x better off than going to class.
Pretty tough class, but definitely interesting. There is so much sheer material covered that it can get a little overwhelming. But, if you go to class, ask for help often, and start the labs early, you will be fine.
This was an extremely hard class, exams were very theoretical, and more than that, labs were very challenging. Homework was fairly hard but doable. Definitely find a partner you can work with and this class will be much less difficult. It is important to work alot with your partner and start early on most assignments because this is a very difficult class.
The class is difficult, attending lectures and office hours will help you out a lot. There are no curves, so don't come in expecting one just because the course is difficult. Despite all of that, it was still very fun, and a learned a whole of stuff during the course.
This course is very difficult and is probably the most difficult of the core requirements for CS. Be prepared to put in a lot of time on the 4 lab assignments and spend a good amount of time outside of lecture learning the material. There is no curve in this class, but they adjust the grade ranges down. If you do a good job on the homeworks and labs, but struggle on the tests (like I did) you should be able to get a B+˺-.
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        0        0.0%
Communication        2        3.6%
Graduate School        0        0.0%
KGSM        0        0.0%
McCormick        38        69.1%
Medill        1        1.8%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        14        25.5%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        0        0.0%
Sophomore        42        73.7%
Junior        15        26.3%
Senior        0        0.0%
Graduate        0        0.0%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        2        3.4%
Major/Minor requirement        54        91.5%
Elective requirement        3        5.1%
No requirement        0        0.0%
Other requirement        0        0.0%
Respondent(s)        57        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        1        1.8%
2        8        14.0%
3        19        33.3%
4        16        28.1%
5        10        17.5%
6-Extremely interested        3        5.3%




 Northwestern
Student Report for EECS_213-0_20: Intro to Computer Systems (Nikolaos Hardavellas)
Course and Teacher Evaluations CTEC Fall 2017
Project Audience 84
Responses Received 58
Response Ratio 69.0%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction, republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Thu, Jan 25, 2018
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        4.26
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        3.81
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        4.86
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        5.45
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        3.71
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        1        1.8%
4 - 7        6        10.5%
8 - 11        11        19.3%
12 - 15        23        40.4%
16 - 19        7        12.3%
20 or more        9        15.8%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
Terrible course. Sadly, a requirement for CS. Keep reading for a rant. This course is taught SO badly. First off, I'm a sophomore CS major, and I was completely out of my depth. Not only that, the instructors literally get the slides from Carnegie-Mellon and proceed to quickly read off of them while explaining very little or assuming we already know what the heck any of this even means. There was no proper explanation of any concept, including the labs, which were downright impossible to complete. TA's had very minimal office hours (1 hour per day, during which I wasn't available) and Nikos made it very difficult to ask questions in class, due to his condescending attitude and tone. I struggled immensely in this course, and our averages were awful. I don't know why this course hasn't been redone yet. It's terribly designed and leaves me feeling that I'm not even qualified to do any work relating to assembly, caches, etc. I wish the instructors cared about our success, but from what I've observed, they really don't.
This class is hard. The amount of information you're required to learn could easily be spread into 2 quarters. Probably half of my class dropped after the midterm. If you're taking this class, expect to work hard. By far the hardest CS core class.
For me, lecture for this course was brutally boring. I thought that the labs and content were actually pretty interesting, but it was hard for me to see how things in lecture were relevant until after I had completed the lab for that section.
213 is a very interesting class, but it's taught very poorly. The class is taken from Carnegie Mellon, including the lab assignments, so you can find all the answers online. While the labs are fun and interesting, they are also incredibly difficult, prompting people to use online resources. The topics learned in lecture are sometimes irrelevant to the hws and don't show up on exams. There is an expectation that you know C very well and the professors don't do a great job of explaining code in C because they assume everyone already knows it
Avoid this class at all costs! Extremely difficult and while you learn a lot, the skills are so specific that they aren't really that useful. 4 labs that are really tough, 4 homeworks that are okay, and 2 exams that are impossible. Be sure to start assignments early and go to office hours whenever you can.
it was hard
THIS IS SO HARD. Unfortunately you have to take it for a CS major/minor. Some of the homeworks and labs are notoriously hard and the exams can be quite confusing. I was very lost. I still learnt a lot. But there was a lot more stuff that I just never quite understood.
The professors are great and really know what they're talking about. Overall, the course material is super interesting, if sometimes a little hard to grasp. Professor office hours really helped me get a handle on the material, so don't forget to make use of them. That being said, this course is HARD. Homework can take a lot of time if you don't understand it and labs can take 15+ hours each. Take notes during lectures, do the reading (The textbook is really good and easy to understand), go to office hours, and start labs and homeworks as soon as they're assigned. Really cool course, a LOT of work.
This class was very difficult and hard to keep pace with. The lectures were very dry and the assignments are difficult.
Start the labs early and do weekly readings.
This class is impossible. If you can get out of it, get out. No matter how much effort you put it, you'll probably just scrape by. There are only 5 hours of office hours and they're at incredibly inconvenient times. You're not prepped enough to do most of the labs and the professors are not very forgiving.
This course is hard. Expect to not do super well unless you put in effort to understand the course material. It is important to go to lecture, but even then it is likely you won't understand everything that is going on unless you do the readings. It is also cumulative as the course goes on, so if you do not understand a concept it is important to try to figure it out before the next class. There are TA office hours every day i believe, so it shouldn't be too hard to find the help you need.
*Disclaimer: I am not a systems person and found the course material rather dry. So take this CTEC with a large grain of salt.* In terms of assignments: this class was freaking HARD. This is straight-up the most difficult class I have ever taken at this school, graduate math classes included! The bomb and malloc labs are pure evil. That said: the teachers were amazing. They both understand the field deeply, doing a great job of pointing out overarching themes and interesting historical context. Their lecture slides were very helpful and carried me through the class. Nikos' voice is also musical and pleasant to listen to; it helps me not fall asleep in class. Heh.
This class is so freaking hard. Seriously, it will kick your butt. The labs easily take 25+ hours a week and alot of times, we had homework assignments on top of that so it didn't make it any easier. The lectures put me to sleep and I normally don't ever come close to falling asleep in class. Often, I would actually get out of class and go take a nap because of how exhausted I was from trying to learn the material.
Pretty tough class, but definitely interesting. There is so much sheer material covered that it can get a little overwhelming. But, if you go to class, ask for help often, and start the labs early, you will be fine.
Without a doubt, the hardest class I have ever taken in my life, which is fitting because 213 is supposed to be one of the hardest classes you take as a CS major. This class is definitely a weed-out class and was taken from Carnegie Mellon, where it is their weed-out class as well. This class is actually so infamous that I mentioned it to an older relative who is in tech and had never gone to college and he knew of the class and how hard it was just through word of mouth. Moving forward to how this section was specifically taught, I did not like the instruction. The content covered in the class is pretty difficult and there is a lot covered. The lectures were not very clear and were too monotone and lifeless so as to make it hard to focus. Nicos wasn't terrible at explaining things but not great either. As a professor, he does not seem to care that much about his students, helping them, and doesn't really respond to student's concerns about the class in general. I generally would not recommend him as a professor for this reason. Outside of class, it didn't feel like we really had many resources for help. There were a handful of TAs that were amazing and that I owe my grade to but most of the other TAs didn't really know the content well and/or didn't really try that hard to help students. The classwork consists of homework and labs that switch off every other week. The homework is kind of hard but can be accomplished if you really understand the material and/or go to office hours; the labs, not so much. The labs are incredibly hard and the only way I got through them was by putting an incredible amount of time into them and by working together with everyone I know and help from TAs when I could; even then, I am not sure how I finished. The exams are usually pretty brutal; the average on the first exam before an unplanned curve was applied was in the 40s. The second exam wasn't as bad but was only easier in response to how poorly everyone did on the first one. Overall, this class is pretty brutal and does not have any mercy. I would not recommend taking it if you don't have to.
Lectures are fast and it's easy to fall behind (although I will say St. Amour is a cool guy and good lecturer), use CMU's 15⼘-213 videos if you fall behind. I'll even link them here for you: http://www.cs.cmu.edu/~213/schedule.html Labs take a long time, so make sure to start early (especially malloc lab). Please please please for the love of Linux find a good partner, ditch your current partner if you have to for another one early on if they underperform, or you will forever suffer like me, have to carry hard through the later harder half, and to do 2x 8-11 hours of work per week while your partner rides on you like a space shuttle on a 747. Class is frustrating sometimes, you'll feel like you're drowning in work and don't know anything, but keep up on CMU's lectures, go to OH if needed (only the TAs who are most helpful, they vary in quality), and you'll make it, I promise.
This was an extremely hard class, exams were very theoretical, and more than that, labs were very challenging. Homework was fairly hard but doable. Definitely find a partner you can work with and this class will be much less difficult. It is important to work alot with your partner and start early on most assignments because this is a very difficult class.
This class requires a ton of time and is very poorly taught but it is interesting nonetheless.
This course covered a lot of material really really fast. The professor was never able to finish all of the lecture and constantly went over time. Every lecture was a new topic, so it was really easy to fall behind. Homework involves: 4 homework assignments (problems about the content learned, not really much coding involved, involves looks at code) and 4 labs (the actually coding part). The labs took a really long time and although they were about the topics we learned in class, it was hard to use the information we learned in class to work on the labs. The TAs weren't really helpful on labs. They were pretty helpful on homework. The tests are open book but that won't really help you, just learn the material really well. All homework assignments are done in pairs, so getting a good partner is important.
I'm not sure how useful this class will be to most people, but it's very hard and not very well taught. Things that come up in class don't always appear in the homework, but do show up on the midterm (haven't taken the final yet, it's gonna be cheeks). Reading the book before class might help if the book weren't made by the same people we steal the curriculum from. The slides and the book are confusing. @profs make sure your TAs know what they're doing so they don't confuse other students
This is a VERY difficult and time-consuming class, do not take it with other hard classes like 212. However, Profs. Hardavellas and St. Amour are really good teachers.
This class is really hard. The test is really hard and most people do very badly. The labs take a ton of time and don't feel like they're as applicable as the homeworks do. Make sure you keep up on the course work and start early on the labs!!
It's the hardest EECS class I've ever taken, but it's some pretty interesting stuff. It gets less appealing as it goes on, though.
This class is very difficult. I highly recommend reading the book before each lecture if you want to do well. Labs and homework are both challenging, and it is very important that you go to office hours when you have questions.
I think this course showed a misunderstanding of how students best learn and how much time certain assignments will take. Malloc lab was a huge amount of work and I felt like I was only learning for the first 5 hours I put into it and the next 30 hours I put into it were just fixing seg faults.
Everything comes from CMU. Don't bother going to class. Just watch CMU online lectures and you'll be 10x better off than going to class.
The class is difficult, attending lectures and office hours will help you out a lot. There are no curves, so don't come in expecting one just because the course is difficult. Despite all of that, it was still very fun, and a learned a whole of stuff during the course.
Obviously a very very difficult class, but the concepts are interesting enough to make the homeworks bearable.
This is a very interesting class. You cover so much material, and I learned a lot about computers that I had always wanted to know. The knowledge you gain is also useful for applying to programming in general. Homework's are reasonably easy, but labs are quite difficult, so start early. Malloc lab is definitely very time consuming, but you actually learn a lot from them and they are pretty interesting in retrospect. There are 4 homework's and 4 labs, plus a midterm and a final. Nikos and Vincent are really good lecturers.
I learned a tremendous amount in this class. This class is content-packed and it seemed almost impossible to cover so much content in only 10 weeks, but we did anyways. I think the most important thing to note about the class is that it mimicks the original class from CMU. The slides are a derivative from CMU as well as the tests, homeworks, and labs. As a result, there was plenty of online content to learn from if in-class lectures were not enough. In fact, CMU's own online video-taped lectures was one of the most important resources in this class and worth looking at. There are only 2 classes a week and each 1hr20mins. Thus, most of the learning responsibility is definitely on the student's side. The two lectures are NOT enough to cover all the material and it is extremely important to read ahead and learn. In my opinion, if it were not for the online content for 213, my learning experience would have been very different and I perhaps would have had negative opinions about this class.
Weed out course for cs majors. It's tough and a lot of time and might not seem worth it, but you learn a lot.
While the content of this course was not unreasonably difficult, the labs were definitely the hardest part of the class. The homeworks reflected the content of the course more so than the labs did and were a better indicator of the content of exams. The midterm was extremely difficult but the professors made it up by making the final easier. Definitely get an early start on the labs and homeworks and take advantage of office hours!
This course is very difficult and is probably the most difficult of the core requirements for CS. Be prepared to put in a lot of time on the 4 lab assignments and spend a good amount of time outside of lecture learning the material. There is no curve in this class, but they adjust the grade ranges down. If you do a good job on the homeworks and labs, but struggle on the tests (like I did) you should be able to get a B+˺-.
The class was quite difficult at times, but is necessary in preparation for classes to come.
The professors are pretty bad at making tests that are feasible to finish in the allotted time period. Additionally, the course material itself is just slides that are almost verbatim content from the book.
I think there is a lot of important material covered in this course and I learned a lot about the bridge between hardware and software and how to use this information to be a better programmer. However, this course has TOO much material squished into one quarter. I think the course needs to be split between two quarters so students really understand the material and have more time for it to click. The labs are also too difficult. Also, this course is just a copy of the CMU course which is frustrating. It is hard to want to attend lecture when you can just watch the equivalent original CMU lectures. It's also hard to respect the teachers and assignments when they just copy from CMU. It also makes people more likely to cheat on the assignments.
I am so disappointed in this class. Peer mentor office hours were only offered Monday - Friday from 11-12 and another hour on Friday. I had to deliberately skip my other classes in order to make office hours because the homework and labs were tough. There should have been more peer mentor office hours offered maybe in the evenings.
This class is hard. Harder than many 300 level classes. The profs weren't amazing but are the best of the 213 instructors. Having taken and dropped this class the year before, it was much better the second time around, due to better instructors and coming in ready to treat it as my hardest class. Go to class, take notes, make sure you deeply understand all the material. Also, the last lab (malloc) is the single hardest assignment I've faced yet in college. My partner and I started a week and a half early, spent over 40 hours on it, and still turned it in half done. This is a necessary class, but be prepared for it.
God
It's very difficult and requires very good time management to pull through.
This class is not as bad as people may make it seem. Nikos and Vincent are great professors and as long as you go to class, you'll do fine. The readings go hand in hand with the lectures so if you cant make a lecture or you want to get ahead, the book is right there. Homeworks aren't bad and help you learn but labs are sometimes really long and not very productive
This course is a very material-heavy approach to system-level CS. It gives you a good knowledge of x86 assembly language and of low-level operations that you don't necessarily think about programming with a higher-level language. There is also a good amount of information and a lab involving low-level security exploits, which was very interesting.
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        0        0.0%
Communication        2        3.6%
Graduate School        0        0.0%
KGSM        0        0.0%
McCormick        38        69.1%
Medill        1        1.8%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        14        25.5%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        0        0.0%
Sophomore        42        73.7%
Junior        15        26.3%
Senior        0        0.0%
Graduate        0        0.0%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        2        3.4%
Major/Minor requirement        54        91.5%
Elective requirement        3        5.1%
No requirement        0        0.0%
Other requirement        0        0.0%
Respondent(s)        57        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        1        1.8%
2        8        14.0%
3        19        33.3%
4        16        28.1%
5        10        17.5%
6-Extremely interested        3        5.3%




 Northwestern
Student Report for Vincent St Amour ( EECS_213-0_1: Intro to Computer Systems)
Course and Teacher Evaluations CTEC Winter 2018
Project Audience 91
Responses Received 73
Response Ratio 80.2%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction, republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Fri, Apr 13, 2018
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        72
Mean        5.24
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        72
Mean        4.61
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        72
Mean        5.35
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        72
Mean        5.65
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        71
Mean        4.96
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        2        2.7%
4 - 7        8        11.0%
8 - 11        21        28.8%
12 - 15        27        37.0%
16 - 19        8        11.0%
20 or more        7        9.6%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
Very good at stoking interest in CS Systems without drowning you.
This is the hardest course I have ever taken at Northwestern, but the content is fascinating. Prepare to spend lots of time on it, and make sure you have a great partner, or else you'll end up doing the labs by yourself.
It was frustrating as I felt like I had to self-teach myself a lot about coding in the unix environment and other topics, as we were just expected to know how to use them for the labs.
Vincent is a great lecturer. The class was really hard, but he did a great job explaining difficult concepts.
you mostly learn on your own through CMU lectures, lectures during class don't help. you learn mostly from doing the homework as well. very large time commitment due to both homework and labs
I very much enjoyed the course, although the workload can be challenging.
This course was difficult but really satisfying. Vincent is great professor. He is super friendly and really ants his students to do well and understand. He is very good at explaining content and answering questions.
This course is a grind but I honestly enjoyed it even as someone who isn't super interested in systems long term. Vincent is an excellent lecturer and genuinely caring individual--take this course with him if you have the opportunity! The malloc lab (Lab 4) is a lot, but as with all the work in this class, if you stay on top of the material, get an early start, work incrementally, and GO TO TA OFFICE HOURS throughout the week you will be okay.
The labs are quite challenging but extremely satisfying once you figure them out! I was very glad to be working with a partner for the homework. This class is definitely hard but exams are open book/notes so if you take good notes/know where material is in the textbook, it isn't too bad.
Vincent is the best! Take any course with him if possible!!!
Very difficult course but learn a lot
This is a HARD CLASS. There is a learning curve (especially if you've never taken a systems course before) so don't fall behind in the beginning of the quarter. Once you get through those first few weeks, things starts to connect and the course becomes much more easier to grasp... And then it gets hard again. So basically, just keep on top of your work. Having a partner is great, and although the Peer Mentors aren't always super helpful, Vincent is always welcoming to questions and office hours.
This class was incredible. It was extremely difficult but also very interesting. The material is hard to grasp at first but lectures, homework, and labs really ensure a good understanding. Plus the labs were really fun!
This class is pretty much copied from Carnagie Mellon's CS 213 class. Those notes and lectures help a lot too. St Amour cares about his students which is surprising. TAs don't have enough office hours for you have effective attention and help.
here's the thing. this course is everything you've heard about it: time consuming, life sucking, awful, difficult. but it's also really cool and interesting if you're honest with yourself. really read the textbook (i realized that i would've had an A if i had while studying for the final); start homework early, use https://www.cs.cmu.edu⾯s˼s�mic˼lass�-s17/www/schedule.html for lectures if your teacher is bad at lecturing cuz they use the exact same slides. TA's often had no idea what they were talking about or didn't help, so you really gotta teach yourself, but it's worth it if you do.
This class is hard and requires a lot of work but if you dedicate the time its not impossible.
Hard class, takes a lot of work, sort of different from "normal" CS courses in that you have paper/pencil problem sets. But it's very rewarding!
oh man. although i think this is a difficult course, it should be OK if you actually come to class and start the assignments early (its no lie, starting them earlly saves u lots of stress). homeworks were easy/medium difficulty but the labs were really tough. what i didnt like was some of the TAs just flat out could not answer questions or explain the concepts, which made the two hours of office hours per day (both at inconvenient times-by the way) sorta useless. the professor spoke a lot about concepts but didnt spend too much time on real examples, which was a shame, but the book has similar questions and solutions you can go off of. FIND A GOOD PARTNER as you two will be spending LOTS of time together. vincent was a good instrucor and lecturer, but i felt like he didnt do enough when i came to him for help. youre gonna have to do a lot of thinking, so be ready. not a class you should take just for fun (unless you dream in assembly code, in which case you probably will take the class regardless of the ctecs). but i didnt think it was as scary as everyone said, as long as you put in your best effort. good luck !!
This class is just a word for word rip from CMU’s online lecture and book. Lectures are merely slides with almost no input from the professor. Questions get pushed off until later in the course. If you don’t have a good group, you’re done. Group work should have less emphasis.
I always hard a hard time paying attention to Vincent, but he's a very kind professor.
too hard
Vincent is a really good professor and really cares about his students. The course requires a lot of time and effort and can be very challenging. It's also a partner course so make sure you know someone going in that will be willing to put in the work.
This course can be very tough if you start lose track. And labs take tremendous amount of time.
The labs are a handful, but all very doable except the malloc lab, to be honest I couldnt go beyond what the book described and I had spent 16+ hours on it. The homeworks are very helpful in my understanding of the course and made great guides for preparing for midterms˿inals. The exams were fair
213 is VERY HARD. Expect to spend a lot of time on labs and homeworks. The best advice is starting early. That being said, Vincent is one of the most understanding and nice professors ever. 213 is going to be miserable no matter what but I really recommend taking it with Vincent as he's just a great guy who wants his students to do well. The exams are really hard!
This is difficult, but the professor was good and the exams were fair.
Hardest CS class for sure, but Vincent was always really helpful. Lectures were interesting and the labs were actually fun once you get the hang of it.
It was a great class and St Vincent taught it great
If you are taking Intro to Computer Systems, you are likely not too far into the CS courses at Northwestern. This will be one of your first real challenges. The content is complex and abundant, but it's also interesting. Grading is brutal, but fair. It's just one of those courses that you will have to put an absurd amount of time into in order to succeed, but you can succeed. 


I would highly recommend taking this course alongside less demanding courses and directly after EESC 211: Fundamentals of Computer Programming II. You will use C which is similar to C++ but with all of the convenient stuff taken out. You'll want C++ fresh in your mind for some of the more challenging labs.


Speaking of labs, this course has one that will take no prisoners: malloc. It is the last lab for this course, and by far the hardest. I'm warning you now. Start early.
This course was the most challenging course I've taken at Northwestern, but it's also very rewarding. I felt like I learned a ton of useful skills. But, it's definitely a class that requires a lot of time during to week to be set apart for it.
Hard course, but honestly great. Wasn't even super interested in systems beforehand either. St. Amour is a great professor capable of very good explanations. In addition, this class is taught at like every college, so there are endless other lecture materials if you're struggling (including video lectures from CMU). HW assignments take a while but aren't impossible, same for labs. This class isn't super difficult (as was 212), it just requires a lot of time input to get good results.
The course is pretty rough - homework assignments, labs, and tests all in one class. I wish the course did not have tests as the programming assignments should prove that we know the concepts
Vincent is great, would recommend taking it with him! He genuinely cares about all of his students and is a super nice guy, plus he knows his stuff for sure! That said, 213 is gonna kick your ass so get ready. I took this alongside 3 other CS courses and I would probably not recommend doing that! The material is interesting and a good intro to this stuff. Make sure you get a reliable partner and get ready to work your butt off. Also, if you want to come into this class with a head start on Assembly language take EECS 205 with Russ!
Very fun and interesting.
Vincent is a good professor and a great guy. However, this class is a ton of work. I knew a bunch of people who have taken this class previously, and from what I can deduce, every quarter this class gets even more and more work. Also, malloc lab was easily the hardest assignment in this class. Many of the TA's were not very helpful because they had not done malloc lab when they took the class. I wish we had had more instruction and guidance on malloc. I felt like I was thrown in the deep end.
Vincent is such a great professor! I was really dreading this class because everyone I know who's taken it has told me how difficult and time-consuming it is, but Vincent made the class very engaging. I was genuinely interested in the material, so I would highly recommend taking this class with Vincent.
Extremely challenging course but extremely rewarding at the same time. This class will push you so hard and you'll spend about six-eight hours most weeks working on the homeworks and the labs, but you come out of it with a much better understanding of how computers work and what the code you write does under the hood. I understand why it's a major requirement, and it should be. Vincent is an outstanding professor and Iɽ highly highly highly recommend taking this course with him.
Make sure you keep up on the homework and lab assignments, doing them as far in advanced as possible is the best option. Readings can be helpful, but resources online can be just as helpful and take less time. Vincent was a good teacher and explained concepts well in lectures but you need to make sure you're paying attention and understanding the material because it will build on itself throughout the quarter and not understanding some of the information may block your further understanding as well
The class is death. You will learn a lot, or fail. This teacher taught it well, but the class will still be death.
This is a tough class! Take it with Vincent though, he is a great lecturer. Make sure you have a partner that will contribute. Start labs early.
This class is as bad as everyone says it is. Exams are open note, but it honestly doesn't really help that much. Start labs and homework early, get a smart partner, and go to every office hour you can. Lecture really blows, but St-Amour has a lot of funny quirks so it's not terrible.
Course was difficult
This is a fantastic course, with a pretty awesome professor. But do not let that mislead you, this class is really hard. If you want an A or even an A-, you gotta grind this course out. There are 4 homework assignments, which are pretty tough (5% of your grade each). Then 4 labs, which are even tougher and take a while to complete (10% of your grade each). The labs are a huge pain and take a ton of time to do, so you HAVE to start early or you will fail them, and considering they're 10% of your grade each, you want to do well on them. Going to class is imperative. If you don't know you won't understand what's going on and won't be able to do any of the labs or the homeworks. You'll also most likely screw up the midterm. Luckily, the midterm and final are really homework based, so if you study those, read the book, and really understand the concepts you should be okay. They are 20% each. Really what you get out of this class is all based on how much you put in. If you don't go the lectures, don't read the book, and don't really try on the homeworks and labs, you will probably learn nothing and do pretty bad. Put in the time, start early on the homework and labs, and you'll be fine. Also, take this course with an easier class schedule. If you take with other tough CS classes, you will get screwed.
The professor made very difficult concepts clearer and enjoyable to learn about.
213 is unavoidably challenging, but Vincent is the man to take it with. He is a truly excellent, competent, and approachable teacher who doesn't just read off the slides (which are themselves great) but simplifies the material's complexity with his own explanations. It is a well-run course at every level, and we rarely went over time in lectures despite his patience in answering questions and clarifying ideas. The readings take a long time and the lectures are generally good enough on their own, but the textbook is exceptional as well. If you are a CS major, I think taking this with Vincent is a no-brainer. This was only his first time running 213 and I've no doubt he will only get better, already being one of the best professors I've had. If you're not required to take this class, I don't think it's an instant "no" as it might've been before. With Vincent it feels genuinely engaging and if you pay attention in lectures, there is no way you won't learn a ton about how computers actually work. The labs are no joke but can actually be fun if you don't wait until the last minute. In sum, Vincent is awesome and makes a tough course as enjoyable as could be expected. If you're willing to put in the work, this will probably be the most informative class about computers you've ever taken.
This class is hard. Make sure that you have a strong understanding of the first half so that you do okay on the midterm and have more leeway for the final (where there is more material). The homeworks can take a while but going to office hours is always a good idea. Make sure to do well on the first 3 labs because Malloc is a pain!
This course is hard but Vincent is an amazing teacher.
The structure of the course is based on a course at CMU and I think it's very well done. The labs and homework assignments are very difficult but they prepare you well for the exams and they're very good at solidifying your understanding of the material.
This course will be pretty challenging. Be sure to start early if possible and maintain that lead. After about half the quarter, the course will get pretty busy as each week is a lab or problem set. You will definitely learn a lot and that is dependent on how much you put into the course. The labs are pretty interesting, but office hours for this class can be a life saver. All in all, having the perspective of how programs work at the assembly level can give you quite the insight in your future classes.
This class is hard, but overall the amount of work you put into it correlates with the grade you get (with the exception of the last lab, which honestly you can spend 30+ hours on and still not figure out, and the TAs and professor aren't very helpful for it at all).
This course might have been one of the single hardest courses I have ever taken at Northwestern. That being said, after finishing the course I feel extremely accomplished and really feel like i have a grasp on computer systems and I actually liked the content we were learning. However, bomb lab and malloc will crush your soul (especially especially malloc wow) but you will feel awesome when you are done with them.
This course is HARD. You will learn a lot, but you have to put the effort in if you want to do well. Start assignments as early as possible, don't put them off to the last minute. Vincent is a lovely person. He really cares about his students and wants them to do well.
This course is very time consuming. Labs almost always take around 20 hours to complete, homeworks talks about 10-15. Office hours are helpful sometimes but often they are too crowded and debugging is inherently difficult to get help with. Vincent was a great lecturer and I am very glad I took this course with him! I ended up neglecting my other classes severely in order to complete the work for this one.
It's the hardest core class of the CS major, but if you read the slides and do your homework you're literally fine
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        1        1.5%
Communication        3        4.5%
Graduate School        0        0.0%
KGSM        0        0.0%
McCormick        31        46.3%
Medill        0        0.0%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        32        47.8%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        0        0.0%
Sophomore        43        58.9%
Junior        26        35.6%
Senior        4        5.5%
Graduate        0        0.0%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        0        0.0%
Major/Minor requirement        72        98.6%
Elective requirement        0        0.0%
No requirement        1        1.4%
Other requirement        0        0.0%
Respondent(s)        73        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        4        5.5%
2        12        16.4%
3        14        19.2%
4        22        30.1%
5        16        21.9%
6-Extremely interested        5        6.8%




 Northwestern
Student Report for Vincent St Amour ( EECS_213-0_20: Intro to Computer Systems)
Course and Teacher Evaluations CTEC Spring 2018
Project Audience 86
Responses Received 58
Response Ratio 67.4%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction, republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Fri, Jul 13, 2018
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        5.34
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        4.79
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        5.53
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        57
Mean        5.54
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        58
Mean        5.00
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        0        0.0%
4 - 7        7        12.1%
8 - 11        28        48.3%
12 - 15        17        29.3%
16 - 19        5        8.6%
20 or more        1        1.7%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
This class is time-consuming.
The content is interesting but it's a lot and the labs are a lot of work too.
This was a LOT easier than I expected. CTECS from previous quarters blew the difficulty of this class out of proportion. If you do poorly in this class, it probably means computer science isn't for you. Either you enjoy the work and spend the time to do complete it, or you're good at it and don't have to slave over it. Getting 100% on the labs which total to 40% of your grade is doable considering you just need to pass all the tests you are given.
This class was crazy. It wasn't as hard as people say, but it wasn't easy.
This course requires a lot of work but isn't that bad actually. Three out of four of the labs aren't too difficult. The homework can be pretty time-consuming I found but it's worth putting the time into since, at least when I took the class, the exams were a test of whether or not you did the work.
Good class. A lot of content. Vincent is a great teacher. Don't listen to the horror stories because if you follow the steps you'll be absolutely fine. But prepare to sit down for a good number of hours for each lab and homework if you want to succeed or pass the class at all.
Vincent is a god. I've never had Sara but Vincent is hands down the best CS prof I've had at Northwestern. Beyond the cheeky humor and funny anecdotes that he seamlessly works into lecture, he knows so much about the material and explains it so well. I would have done so much worse in this class if someone else had been teaching. There's a lot of material you cover, which is why this class has a hard reputation, but if you plan ahead and manage your time well, it's very easy to get an A in this class. If you can, I recommend taking 203 (with chi haur) the quarter before this class because that will definitely give you an edge for the first midterm.
Great course. Just give it the time it needs and don't expect it to be easy. Go to office hours! All the time!
This is insanely hard, and honestly packs too much into one quarter. But Vincent does an excellent job of guiding you through the whole process to make it as managable (still barely managed, myself) as possible.
As anybody including the professor will tell you, the material and assignments + labs are going to demand a lot, but prioritize time and it's learnable for sure
This course, as its reputation describes, is shockingly challenging. The material learned also doesn't seem particularly useful in most field of CS. However, I understand that a person going into systems would need this class, and how this being a person's first introduction to systems would require the course to cover so much material.
This course is time-consuming but I think Vinvent tried to make the tests easier this quarter, so the class was not as difficult as it has been historically. You still have to put in a lot of work though. Go to office hours
I really enjoyed this class, for both the material and the teaching. Vincent's a great teacher who is patient and really understands the subject to an almost unhealthy degree. The material is challenging but it makes sense, and it all ties together quite well.
hard class
Vincent St amour is a God lecturer. Better than the professors at CMU systems class based on which Northwestern bases this class. The pace of lectures is great to keep you engaged and also help you learn a lot about how a computer works, including hardware, memory allocation, security, and assembly programming.
This class is HARD but also the best class I've taken so far. Read the textbook before class and go to office hours and you will do fine.
This class has a lot of hype around it. I found it really not that hard. The topics are really manageable and the textbook provides a detailed, clear, and relevant explanation for every concept covered in this class. Vince's lectures are engaging and he makes this course entertaining. This is a required class for the CS major, so you'll have to take it. Definitely try to take it with Vince because he is an amazing lecturer. He keeps things focused and too the point, covers all the relevant material, but he also keeps the class light-hearted and goes out of his way to show the importance and interesting elements of the concepts. I learned so much in the class about CS I didn't know before. Beware, this course does have a lot of work. One homework or one lab per week. The labs can be extremely challenging, but they are designed to teach and not to bore. Some of the labs were actually quite interesting. You will learn a lot in this class if you can keep up with the workload.
Great class despite being copied from CMU. Vincent is great and knows his stuff. Take with him if it's a required class. Labs and homeworks will boost grades although exams aren't as hard as they were in the past from what I've heard
A challenging and intensive course. Expect to struggle and learn.
Harder than 212 and 214 but still a reasonable class. Vincent was a great instructor. PAY ATTENTION IN CLASS AND CONSULT THE TEXTBOOK FOR HELP ON THE HOMEWORK. Office hours were very useful too.
EECS 213 is tricky, even when you are able to understand the material with a great professor like Vincent. His lectures really help to clarify the readings that you definitely SHOULD DO, but otherwise you can go to office hours since Vincent more or less keeps the same TAs for 213 quarter to quarter. The four homeworks are worksheets that take some time and the four labs take forever. Highly recommend office hours for the labs.
It was good
This is an amazing class, and Vincent is an amazing instructor who really cares about students learning - he is not only very well versed in what he's teaching, but he is great at transmitting it. He met with me twice individually to go over topics I was interested in that were only tangentially related to the class. He is a great guy and will go above and beyond to help you understand all the important concepts of 213.
Goes though a lot of challenging material in a short amount of time. Ask whenever something is not clear because it will happen. Make sure both you and your partner prioritize this class because you will struggle.
Material is challenging but also interesting. Vincent is a good teacher.
St-Amour is very upfront with how challenging this class is. The homework makes you think and might take some office hour questions but is generally very approachable. The labs are more challenging and will require a lot of time and mental effort, not to mention a number of office hours. Be sure to find a good partner that will contribute to both types of assignments. Thankfully, if you generally understand the material, the exams are fine. While not everyone may be super into the low-level software and hardware inner workings of computer systems, they're important concepts to understand and at least have a general idea about and I think will prove to be very useful in the future. Taking EECS 205 helps in the beginning since there's a lot of assembly.
Vincent is an incredible professor and this class is super cool. If you opt in and commit to focusing in class and staying on top of the work, you will really enjoy this class and learn a whole lot. It gets hyped up as being incredibly difficult, but if you go to class, read the textbook, and stay on top of the assigned work, it is actually really manageable. Great course! Don't be afraid of it! Just put the time in!
This course knocked me out. Once I stopped reading the textbook though it bacame a lot more manageable. Getting a good lab partner is the most important thing you can do.
This course is as promised, a hard class in a rewarding subject.
this course is a necessary evil but st-armour is a chill guy and a good professor. the homeworks really help you learn, and the midterms aren't weighted as much as the labs and homeworks
Prof is great for this course. Content can be dry at times but is fantastic if you're interested in˼urious about computers. Tests are fair overall. Labs and homework are very hard but not unmanageable. All content covered in class is posted online.
Course is hard but survivable. Assignments take a while and you will likely need to go to office hours for them. Lectures are very long and difficult to apply to actual problems as they base off of concept instead of actual application.
This class is exactly what you're told to expect. Brutally challenging, but honestly manageable if you handle it responsibly. Do not underestimate the labs, they are extremely difficult. Homework can also be tricky, but prepares you so that you can get an passing grade and keep limping toward the finish line of what will probably be one of the toughest classes you ever take. You definitely learn a ton.
I know most students won't be able to do this, but I found it really helpful to drop the class and then retake it; it was about 3x easier the second time around. The labs are definitely a challenge, but the majority of the peer mentors are really helpful. Vincent is extremely helpful in office hours and will take the time to make sure that you understand the concepts. The tests vary in difficulty. Getting started early is a really good piece of advice, but it might not be feasible if you're doing other classes. I liked this textbook more than any other CS textbook I've had; make sure to read it, and the practice problems help a lot with the homework.
This is a difficult class, but you really get out of it what you put in. Your lab partner can definitely make or break your experience and you need to go to class.
This class is pretty time intensive but also very valuable. The labs in particular were pretty tough. I enjoyed this class overall.
The most time-consuming intro eecs class by far but it's very interesting. The labs are hard but solving them gives off a great sense of accomplishment. The exams are not hard, compared to other components of the class. Also, Vincent is a great lecturer. The only challenge is not to fall asleep to his melodic voice
Wow. So, the lectures and the labs are straight up plagiarized from Carnegie Mellon. That leaves us with 2 things that the professor can give an honest effort of preparing: homeworks and exams. Both were awful. Homeworks were often off-subject and wrong, while the exams were too easy and interestingly subjective. You could lose a lot of points depending on how you understood the questions since the were no partial points and the questions were not clear. Overall extremely disappointed that the teaching staff gave 0 effort in a course that should've been one of the most interesting courses in Northwestern. I would say don't take it but do you have a choice?
Overall, the concepts of the course are not necessarily that hard or complicated, there are just many small details to keep track of. Generally, the class takes a lot of time, but if you can spend enough time on the class, it should not be very hard. Vincent is a good teacher, and office hours are very useful to help get through the homework and labs.
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        0        0.0%
Communication        2        4.0%
Graduate School        0        0.0%
KGSM        0        0.0%
McCormick        29        58.0%
Medill        0        0.0%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        19        38.0%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        16        27.6%
Sophomore        30        51.7%
Junior        11        19.0%
Senior        1        1.7%
Graduate        0        0.0%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        2        3.3%
Major/Minor requirement        56        91.8%
Elective requirement        1        1.6%
No requirement        2        3.3%
Other requirement        0        0.0%
Respondent(s)        58        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        1        1.7%
2        5        8.6%
3        13        22.4%
4        21        36.2%
5        11        19.0%
6-Extremely interested        7        12.1%




 Northwestern
Student Report for EECS_330-0_1: Human Computer Interaction (Michael Horn)
Course and Teacher Evaluations CTEC Fall 2017
Project Audience 114
Responses Received 85
Response Ratio 74.6%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction, republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Thu, Jan 25, 2018
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        83
Mean        5.17
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        84
Mean        4.83
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        84
Mean        4.31
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        82
Mean        3.72
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        82
Mean        4.96
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        32        38.1%
4 - 7        45        53.6%
8 - 11        6        7.1%
12 - 15        0        0.0%
16 - 19        1        1.2%
20 or more        0        0.0%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
I feel like if you get a bad group you can have a bad time in this class (I didn't, so I enjoyed it). But the lectures are pretty interesting.
Good course, but not much help if you want to learn about website development.
Easy A, really boring.
This class is harder than it used to be, but still pretty easy if one person in your group knows how to code JS or HTML. Interesting content, but not presented in the best way tbh.
The class isn't too hard. The main feature is a group project where your group has to design a UI. You can think of it like a DTC project, but with less work required. The HW's are pretty easy, but are used mainly to get you acquainted with the tools and design philosophies you will be using in your group project. The project was written in HTML˼SS/Javascript. The first couple weeks are used as an intro to the languages used for the project, while the rest of the quarter is used for the design philosophies and other DTC-esque topics, leaving you to figure out the rest of the programming languages. This isn't so bad, though, as they teach you enough to get the project done, and there is a in depth documentation page for the languages you can use for any questions about the languages.
Good
Good EECS course. Four relatively easy assignments plus one group project throughout the quarter, the workload wasn't to difficult or too much. Much of the material from the class is intuitive though.
This class was interesting and Professor Horn is a really good professor but I wish it taught me more about how to code in html˼ss/javascript. Also the discussion sections were not helpful at all.
Easy but interesting class. A few individual HW assignments and the rest is a group project, which is very manageable.
Overall, this class was super easy and Professor Horn is great. If you're looking to be challenged and to learn alot, this class isn't for you. If you're looking for an easy and fun class, then you should take this class.
This course was extremely enjoyable, and it's nice to see the teacher get so excited about design! My favorite lecture was the typography lecture. You'll have to learn HTML and CSS by yourself, but it's not too bad. Make sure to get a good group for the project though.
great class. low workload and pretty interesting skill to learn if you dont know html˼ss previously. horn is the man.
Homeworks at the beginning were the most challenging in this course.
Overall, easy A. Horn is great.
It is a good course to get start with HCI.
The HCI part of this is very interesting, the group work is also fun and you learn alot about design principles
This is a very interesting class. Everything is well organized. Professor always gave quick response on Piazza. Recommend!
Did not work on technical skills a lot
use HTML fluently
The students in this class will be required to design a website in groups. As an international student, this kind of group work helps me not only practice my front-end programming skill, but also gives me a chance to work with the students from other culture. I meet lots of friends at the end of the course. Besides, the course covers all aspects of web page design including from graphic design to the De Morgan design principal. I not only learned the engineering knowledge but also the principal of design.
Great course, learn interesting and useful material and relatively easy.
I liked that this was a project based course and that I got to learn HTML, CSS and JavaScript which isn't taught in many other CS courses. The groups were fun to work with and overall it was a fun class.
Micheal is sososo nice. But I still hope he can add more programming language in the course.
easy class. go to discussions for participation
its lit
Once upon a time, EECS 330 was regarded as the easiest 300 level where it was rumored most students got A's. That still probably holds true, except now you cannot ditch class, as there are random pop quizzes almost every day so the professor can actually get a classful of students. Easy class, make sure to go to class and find a good group for the project. Otherwise, it's a breeze.
This is a fun course to take, especially if you have a good group. And no exams!!!
This course was great,.
I am interesting to javascript now
I prefer the back end of coding to the visuals, so that was a little disappointing. However, graphical design is very important, so I understand.
The class is what you make out of it.
The individual homework of the course is very simple with a specific guide to instruct students how to do their homework. And we also have group project. I think finding a responsible and hardworking teammates is really important, which decide whether you can have a happy time doing project through the quarter.
loved this course all together, helped me realize would I want to go into, loved that it combined learning about technical skills and analytical skills such as how something should be made based on usabillity
This is a self-teaching class. You learn HTML, CSS, and Javascript while making your app, for which there are milestones set throughout the process, which is why I loved the class. However, the lectures are uninteresting and I never went to class for several reasons. (1) the lecturer seems tired and disinterested (2) each class tries to cover a large topic (like fonts˼olors), and does so in a very introductory and obvious way. Still loved the class, easy too.
Only took this course to fulfill the interface requirement in the CS major. Nonetheless, the class is fairly good and probably the best class that satisfies the interface requirement for CS majors.
Yes, the course helped me. It teaches basics of web development and very useful to students who want to develop applications. It teaches the rules for making good interfaces.
Wasn't a huge fan of this class. Built around a quarter long web development group project. You only need to build a pretty simple interface but most of the html˼ss you use is self taught. Pretty light workload for a 300 level EECS class.
Easy and interesting class, no exams, projects˺ssignments are not hard or time-consuming
actually learned way more than i expected in this class. it's harder than it used to be though. it's a good mix of individual work and project work, so find yourself a good team!
Group work.
it was helpful
Its a good CS class if you want to take it easy but also want to learn how to design websites.
This class cut right to the chase and gave the students exactly what they were looking for. I really appreciated that.
Great course to take, it's essentially CS-oriented design 101. Learned a lot about web dev and norman design principles, which are actually all around us! Course involved a quarter long project done in groups, which centers around some these (which is quite broad). Overall fun class to take.
This class was very fascinating. I learned a lot; it teaches some really important skills. Some thoughts: The class itself is basically DTC for web development. It focuses primarily on web design⿞velopment, which is really a tiny fraction of the entirety of HCI. Great web development class, poor HCI class. Segal offers better courses in HCI, etc. Keep track of your assignments. They are few and far between, and worth a low amount of points. But the whole class is low point scoring, so missing one can really affect your grade.
Get into a good team, and you will enjoy the course.
it was very easy to get a good grade, not challanging
Great course and great instructor! You can learn what is the good design not only in web design but also in any product. And you will develop a website using HTML CSS and Javascript(backend is not required) in the group project.
Very easy class. Not super stimulating but the project you work on as a group is fun if you have a good group.
The course was an interesting insight into human behaviour and preference in relation to design. Professor Horn is an excellent teacher.
Front end design
lots of busy work and little content. prof. horn means well but the class ends up with 20% useful content and assignments and 80% busy work. quizzes, homeworks and projects are a bit of an overkill honestly. In retrospect Iɽ take another interfaces class.
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        3        4.0%
Communication        1        1.3%
Graduate School        13        17.3%
KGSM        0        0.0%
McCormick        34        45.3%
Medill        1        1.3%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        23        30.7%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        0        0.0%
Sophomore        26        31.3%
Junior        20        24.1%
Senior        17        20.5%
Graduate        20        24.1%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        4        4.4%
Major/Minor requirement        60        65.9%
Elective requirement        12        13.2%
No requirement        15        16.5%
Other requirement        0        0.0%
Respondent(s)        84        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        0        0.0%
2        4        4.8%
3        9        10.7%
4        29        34.5%
5        31        36.9%
6-Extremely interested        11        13.1%




 Northwestern
Student Report for Eleanor O'Rourke ( EECS_330-0_20: Human Computer Interaction)
Course and Teacher Evaluations CTEC Winter 2018
Project Audience 209
Responses Received 145
Response Ratio 69.4%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction, republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Fri, Apr 13, 2018
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        144
Mean        4.28
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        144
Mean        4.05
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        144
Mean        3.85
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        142
Mean        3.39
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        141
Mean        3.84
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        31        21.5%
4 - 7        69        47.9%
8 - 11        34        23.6%
12 - 15        7        4.9%
16 - 19        2        1.4%
20 or more        1        0.7%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
This class was really good if you are interested in a very general survey of Human Computer Interaction. The class has changed considerably from past quarters and actually is a substantial amount of work (the project prototype checkpoints take a lot of planning, groupwork, and hours of coding if you put in your best effort). Homeworks 3 and 4 seemed kind of forced and contrived (felt like busy work). I feel like it was difficult to get much out of the lectures because the topics were very general. For example, we only spent one lecture on the entire topic of data visualization and one lecture on the topic of A˻ testing. I'm hoping that in the future they reduce the scope of the class so that they can focus on fewer topics in depth.
This course feels a little rushed trying to cram web programming and HCI all together in one quarter. I like how you can sort of pick your group / project.
Chill class with fun projects stuff, will help you learn front-end development
Use HTML, CSS, and JS to create interfaces. Not difficult in terms of coding, but work can get tedious sometimes. I thought that an excessive amount of points were often docked off for the slightest mistake on assignments. Nell however does genuinely care about this subject and is very approachable. Easy to get an A if you submit assignments on time and do them decently well.
Great course! Lots of hands on experience which I loved, and I learned a lot about GitHub, HTML, CSS, and Javascript, all of which I think is really helpful. I wish there were more HCI classes at NU.
330 is a cool course to get a start in HCI. Honestly, I enjoyed it more than I thought I would. The only qualm I have against the course is mandatory attendance. The result of mandatory attendance is people just sitting on their computers the entire time, which is incredibly distracting to me. Projects were interesting, and allowed students to actually do something they were interested in.
This was a great course. Focused on a quarter long project, so it is important to work with a good group. A few other homework assignments in addition to the project help you learn the coding basis in html, css, and javascript that you will use for the project. Overall a lot of fun!
This is a pretty easy class, you can put in very little time and get an A- at least. You might not learn that much though
This class does a good job of introducing students to web design. The quarter-long project of designing a website is fantastic- it's great to have a high-quality deliverable like that at the end of the quarter. This class does have a lot of busy work, however. Much of the material covered in lectures was not interesting or very valuable. Several of the assignments were more time-consuming than they were worthwhile. This class does take a lot of work, and not all of it is valuable. However, it is a good introduction to web design.
This class is super easy. There are no exams and the main assignments you can do in groups.
A good light course if especially if anyone in your group has prior web-programming experience--I personally had none and didn't feel like I learned a lot on that front through this course, but I enjoyed the broad intro to HCI, especially in the last couple weeks when the course goes beyond the web project. Similar to DTC (for any engineers) but with no real client interaction, just a more nebulous user-centered design process.
It's cool to be able to build a website. Class is interesting but lectures are extremely pointless.
Grading was unnecessarily harsh. No longer an easy A class. lots of busy work and writing. this is pretty much DTC for creating a website. If you get a bad group youre in for a ride. Lectures were useless
BEWARE: this class is very easy and the course material is practically common sense, but they have now changed˺re still changing the grading system. BASICALLY, they don't want to give everyone A's, so for us they made getting full points only possible for 2 students of the 20 in a discussion section. What they were really trying to say was "some projects are worse than others, the better ones get full points." BUT, they didn't say that. Watch out.
The team project takes quite a bit of effort. I wish the instructors let us choose our own project as the project I was assigned to was boring and demotivating to complete
Lectures: Teaching in a full LR2 with a soft voice and no microphone. Attendance is taken through reading quizzes at the end of lecture. The answers you provide don't matter, it's just that you put down something, so there's no incentive to do the reading. Anything that is taught during lecture is a watered down version of what you learn in DSGN 306 (UX Design).
Discussion section: Grading is entirely subjective and based on how nice your TA is. It seemed like ours had a quota to fill for certain grades in the class. Before user testing, discussion is entirely useless.


Overall: the class has you teach yourself HTML, CSS, and Javascript. Nothing about this is covered in lectures and the amount covered in the discussion section is limited and rather useless. The project can be very hard or very easy depending on your topic and your investment. Mine happened to be very hard, and involved a lot of late nights in the library with my group trying to figure it out.
This is not just a UI course. It feels like DTC for CS students.
The 4 HW assignments really do improve your ability to understand the purpose of the course and improve the website you have to develop. The team assignments were harsh for me because my team did not contribute at all really to the project and the course is structured so that there is nothing you can do when your group does not contribute. I think you can learn alot in this class, but the structure of the lectures and groups are very, very weak.
The course is project based which gives a good exposure into web design. The lectures are boring though.
They say that you don't kneed HTML˼SS experience but man you are at a significant disadvantage if you don't know it. I didn't know it and it was a struggle. You are taking this course with grad students too so sometimes the average is just so so high. LECTURES ARE BORING AND POINTLESS UGH
An easy CS course above 300 level.
DON'T TAKE THIS WITH NELL. This is supposed to be an easy and fun class but NOT THIS ONE. The lectures are mandatory (reading quizzes EVERY TIME) and often times the material in lecture is so useless and the most intuitive stuff you probably knew. One time we looked at pictures of different doors to demonstrate visibility. One time we sketched. This would be fine if the individual hw and group project weren't so coding intensive. How can you expect to not teach us any HTML˼SS and have us do the hw perfectly? Also the grading rubric for this class is TERRIBLE AND ARBITRARY. The rubric literally limits the number of students who can get full marks on an assignment, no matter how good it is. It's absurd. I learned nothing and didn't even get an easy A.
What makes or breaks the course can be the group you are working with. Try to look for a well balanced group that is organized. Each lecture introduces a new concept on designing UI if you are really interested in that area. The classes can be interactive also as interesting design problems are asked sometimes.
It did focus on UI design theories, and maybe I needed that to have the basics.
Fairly easy EECS class if you keep up with the work and have a decent team. The design concepts covered are essentially a rehashing of what you've already seen in DTC (if you're in McCormick). You will not learn any coding in class, although you're expected to create a prototype using fairly intermediate html, CSS, and javascript; so, either start learning those languages ahead of time, or find a group with someone who already knows them. You will not have much time in the heat of the quarter to become nearly enough familiar with these languages to make a quality prototype.
If you don't care about not learning anything and want an easy A, this is the class for you. Lectures are like DTC lectures but about websites. All the HTML˼SS/Javascript is supposed to be learned on your own. First 2 assignments are fun and help you learn, the rest are a timesink and dont teach you anything.
Easy-ish course. They're super nitpicky on the homework assignments which is weird because it seems like the rubric is structured not to measure your understanding of the topic, but rather just to try to take away points form students. You're also at a huge advantage if you have prior frontend experience (HTML, CSS, JS, Bootstrap, etc).
This is an easy 300 level class. Very time consuming. Very TA dependent, so if you have a bad TA you are out of luck. Ask your TA what the rubric is or else you will lose marks for no reason.
This course is horrible. Do NOT take it. Literally 5 minutes were spent teaching you how to code in 3 brand new languages and everything else you had to teach yourself. You don't learn anything in the lectures. There are reading quizzes during every single class and there's a password on the quiz so you have to show up to class to take the quiz
Not too hard. You don't really need to go to lectures.
Good topics to learn, but rather very easy.
The content of the class was very easy but the grading is so subjective, that getting an A is not easy as it may seem. Professor won't teach you HTML, CSS, or JS but teach you about elements of design and you pretty much learn the languages on your own (and coming from someone who didn't touch the languages before hand, it was not bad at all). There is a quarter-long project and if you have a solid group where the work is mostly divided evenly, getting an A won't be hard. There are no exams.
I like the class, although there are lots of small things you need to do every week.
I thought that in the beginning of the course when we were learning about HTML and CSS it was pretty interesting but once we got into the last 60% of the course it got very uninteresting. We were forced to go to lecture because there were daily quizzes but I believe if that hadn't been the case then the lecture hall would've been almost empty every day
made me write code for the first few weeks.
Most CTECs are gonna be from people who went into this with an established group and worked with them. That's all well and good but if it's not the case with you, or you don't already have an HCI idea you're dying to build, it'll be significantly less enjoyable. Lectures are simply not engaging and if not for the in-class quizzes 80% of people wouldn't go. The readings are easy and fairly interesting so I would suggest doing them despite being totally unnecessary for said quizzes. You will have to learn HTML˼SS + JS yourself as the guidance on them you receive from the class is basically non-existent. I don't know. This class is the kind where putting in minimal effort makes it virtually impossible to get lower than a B, but don't believe people that say it's a "guaranteed" A. And don't expect the work to be that interesting rather than a slog to get through.
This course is not a coding course, teacher only talks about many abstract but but not very useful notions. You should not except any systematic knowledge about coding. And your score is not string related to your coding skill. I pay most of my attention on coding but teacher and TAs just grade your writing in some way. So if you like listening to notions and writing and presentation, this course is fine. But if you want to learn like HTML,CSS or JS, this course is not the best choice.
Really enjoyed the hands on side of this class and the iterative design and testing. Fun to build a website, but make sure you have a good group. Lectures were not that helpful to the project or learning web development and were often common sense.
Pretty easy EECS class, lecture attendance is basically mandatory because of the daily reading quizzes but the homework is all easy busy-work. The majority of this class is the HCI project, so make sure you like your group.
Not the most informative class, lecture wise, but it challenged our team in terms of coming up with an idea and developing that.
This course was really easy, at times it felt like two separate classes: the lectures and the project˽iscussion sections. Having a good group really made the class more enjoyable, but the lectures were still pretty uninteresting and were essentially the same material as the readings. The website project was really fun to do but I ended up having to teach myself JavaScript, Git, etc.
They changed the curriculum, and the TAs really tried to nitpick this quarter to create a normal grade distribution.
The class is quite a joke. The class focuses on just the mundane design aspects but never really applies Javascript/JQuery lessons. Everything is pretty much self-taught and the daily in-class quizzes are pointless.
This course is pretty easy and can be fun depending on your project group! It's more time consuming if you're not familiar with HTML˼SS/JS but the first few weeks do a decent job of catching everyone up to speed enough that anyone can confidently work on their project.
learnt so much, but lecture was not always that helpful or necessary
This course takes up much more time than I expected. There are homeworks on design concepts that take a decent amount of time and are graded pretty harshly, and there is a massive project that has many parts, all of which are also graded pretty harshly. It is extremely difficult to get an A in this class (this is a change from last year). Often your project seems like a great idea at the beginning and then becomes extremely difficult to create, and doesn’t fit with the point of the class.
I enjoyed the class, and you get the chance to teach yourself how to code on HTML, CSS and JavaScript.
They tried to make this class "harder" by giving obnoxious mandatory reading quizzes every class and grading assignments in a ridiculous manner. The lectures aren't worth going to, most of the project assignments are busywork that isn't related to interfaces, and the personal assignments are annoying. I came in with prior knowledge and learned nothing from this class- I absolutely recommend NOT TAKING this with Nell in the winter.
Once upon a time, 330 was known throughout the EECS major for being the most cartoonishly easy class in the major. When faced with how to change this, the admins/teacher decided not to add new content, but rather to simply make standards massively harsher and add a lot more assignment for a class that still has the same cartoonishly low amount of content it always did. If you are looking for an easy class, don't take this because it takes a LOT of time and is very difficult. If you're looking for a challenging class, also don't take this because it won't teach you anything despite all the challenge. Basically just avoid this dumpster fire in general. This class has gone through two incarnations, hopefully it goes through a third because it is very needed.
Class time was so poorly utilized by the professor. It would have been so much more beneficial to learn how to code in HTML and Java to optimize user experience. Instead, lectures covered things that seemed so common sense. Pretty easy though and project was fun.
Get a good group, divide work equitably--there will be many prototypes, many testings, many write-ups.
The course is not difficult but intensive. The project is focused on design interface more than the functionalities of your web application. The guidelines followed by the TAs are usually strict. But a lot t learn if interested towards learning sciences.
It helps me a lot in HCI.
Very cool class, Prof O'rourke hits all the relevant topics, the assignments are kinda tedious but everything is interesting and relevant to different parts of the human-computer interaction field
Wish there were more coding aspects of the class. Not very exciting or difficult material
.
I was unfortunately disappointed with this class. The assignments were very long, and short/overlapping deadlines and strict requirements meant that this course gave unnecessary stress where it wasn't needed. The group project assignments were graded unnecessarily harsh and forced groups to constantly meet up outside of class to fulfill basic requirements. Lectures were interesting but dry, and the reading quizzes didn't feel like they added to my learning. My TA took a long time to grade assignments and constantly arrived late to studio and office hours. This course really needs to place less of an emphasis on fitting so much material into a short period of time and should focus more about getting students equipped with the skills necessary to approach emerging topics in HCI. It is clear that Nell and the TAs are passionate about HCI, and I hope this class can improve for the next time.
Good class. Not too hard. I basically built our website by myself and I still wasn't overwhelmed and I still really liked the class
I was very confused about the grading rules.
I loved it! Got to learn HTML˼SS/JS although it was self-taught, the class gave me a reason to learn it
This class is known for being super easy, so while I do appreciate their efforts to make it a little more rewarding, which I didn't mind, I do think they messed up by not actually teaching us the coding languages properly. The homework that required coding was something I went into completely blind because I had never coded before, so I was annoyed that we were forced to just Google everything. I'm not paying tuition to just Google. The project requirements were fine, but the busywork wasn't helpful. And finally, those quizzes every class were the most annoying and useless thing I've ever had to do in a class. Not only do people skip class intentionally and just get the code from their friends, people just answer randomly on the questions and it just takes time up. Completely useless.
Not an interesting course for me. Much more design-focused and oriented.
Don't take it with Prof O' Rouke!!! You don't learn much, and have to put so much effort and time into your project. But, you don't get anything out of it because it is what you can do in your free time. Even grading is very harsh, so it is not worth it.
There were a lot of assignments. They're not very difficult, but the class was a lot more work than I expected. Having reading quizzes during each lecture was excessive, and not that helpful. The content of the course was very intuitive. It did not seem necessary to spend a lot of time engaging with the material.
Worst class I've taken at Northwestern. This class encompasses how much the NUCS curriculum needs to improve. O'Rourke is not a bad professor, but this course is just so badly taught. The class is called human-computer interaction, which is basically "how to build a good-looking and interactive web app." But the prof spent literally 10 minutes on HTML and CSS, and NONE on Javascript. There were 2 homework assignments that were decently difficult if you had no CSS or HTML experience. Luckily, I did, so I did not struggle too much in this class, but I would have liked to learn the cooler tips and tricks regarding CSS, HTML, Javascript, and web development in general. None of this was taught, and I can't imagine how hard it was for students who came in with no CSS, HTML experience. O'Rourke spent a whole lecture literally going over font types, sizes, and colors. What a waste. Do not take this class if you have no HTML, CSS experience; most likely you will find it quite difficult, and also they grade tough. If your margins are off like 1px, they take off 1 point (homework assignments out of 20). There are no tests which are nice, the "final" is really just building a web app prototype using HTML, CSS, and Javascript given a specific idea and purpose. At the end of the quarter, you have to give a 7-minute presentation about your web app and the problem it addresses. The whole process of building this prototype is similar to DTC, where you have to do user testing, etc. Think of this class as a jank, waste of time web development version of DTC. Wouldn't recommend.
Some take it because it teaches you 'html˼ss and javascript'. Please don't take this class for that reason. It teaches you the bare minimum of it. This class is about learning how users would interact with your product, and if you are not interested in this topic this class will bore you out of your mind. The TAs are also horrid in programming either since they are not expected to be good programmers.
I greatly enjoyed this course, the material was interesting and not extremely challenging but you could put in more work if you wanted to get as much as you can out of the class
This course got a lot harder than it used to be, and therefore it was harder than most people expected. Was a reasonable amount of work if you had a good group (make sure you have a good group, try not to be the only CS major in your group!!), was a LOT of work if you had a bad group. Grading was pretty harsh, seemed like there was an effort to make this not an easy A anymore. Which basically meant grading things really harshly to prevent as many people from getting A's, which felt unfair at times.
Great class overall. It is pretty easy but still would take quite a lot of time, as any front-end development. Students are put in groups of 4 for a quarter long project. A lot depends on your team, try to arrange responsible teammates.
The entire class is a group project in which you implement an application of your own. There is a lot of freedom, but it is a bit difficult if you've never coded in HTML˼SS before because they don't teach it in class. The TA's are pretty helpful, but there isn't a lot of time for the project so you want to make sure you're on top of your stuff. The grading is a little annoying because the TAs are only allowed to give a certain amount of each grade.
I liked how this class was structured. Also, it's very important to go into this class with friends you know won't slack off, since the entire course is based on one cumulative project. I loved my group, so I did well. Others may not have. Also, lectures were fairly useless, and I found that learning about paper prototyping was not really useful to creating a computer prototype.
Everything taught in this class can be self-learned easily. In fact, the class is set up in a way that forces you to self-learn, especially HTML˼SS and JavaScript. So ask yourself, why spend tuition money on this class? Maybe only if you want a moderately easy A (not too easy though) or if you're interested in doing an HCI project.
Good course, but bad implementation of grading. The topic of the course was easy and straightforward, and if you have a good group, the class shouldn't be difficult. However, the grading was unfair. Only 2 people from each discussion section were allowed to get an A on any given assignment (according to my TA). I wish we had spent more time on actually learning javascript. But other than that, it is a fairly easy course, its a good supplement for taking with hard classes like 213 or 212. Iɽ recommend it though! Nell was a super nice professor and I enjoyed her lectures event though sometimes the material was a little boring.
The course wasn't very involved.
TA was quite mean, which is the awful feeling all through the course
The project is really fun and interesting.
Assignments could be really time consuming, and not much direction was given for the actual computer science aspect of this course, so I would recommend being familiar with HTML˼SS/JavaScript before taking this. Grading was sometimes harsh and/or unclear because they don't want the mean to be too high.
This class has a policy of artifically curving down since only two people can get a perfect score on a single assignment per studio section. Take that as you will.
This class has gotten a LOT harder apparently. This had made the projects significantly better but don't expect an easy A.
The group is divided by studio, if you would like to have fixed partners, be careful to have same studio with each other. The course are mostly introductions for the graphic design principle for HCI, focusing on the website front end.
It's cool that you get to create your own application throughout the quarter but I felt that the teaching style and evaluation methods could be greatly improved. Your grade is based entirely on homeworks and your project checkpoints with no exams, with lectures mainly rehashing the readings, so lectures seemed pretty superfluous. Furthermore, the lecture quizzes were intended to encourage lecture attendance but because everyone had their computers out, people weren't focused on the professor and overall lectures didn't seem to add much to the class, which seems pretty counterintuitive for any class. Also, although the readings and the professor teaches concepts on design concepts, they spend very little time teaching you the actual tools (HTML, CSS, Javascript, etc.) and you're forced to self-learn ALL of it, which made the project difficult because you know what it's supposed to look like but have no instruction on how to get there or how to write efficient code. You learn nothing of Bootstrap or JQuery, which end up being extremely important for the project. I think a lot of students come into the class hoping to learn HTML, CSS, Javascript, and other tools to create websites, and the fact that we spend so much time learning the theory behind HCI but not the tools doesn't make much sense and puts at a disadvantage the students who don't have prior experience in those coding areas.
Group project is the main component of the class. Great instruction, engagement, feedback, and fair grading overall.
This course helped me learn about human centered design and design thinking. This course did not help me learn about web technologies. 
Do not take this course if you want to learn HTML/ CSS/ JavaScript. I went into this course already knowing a lot about any of these topics. Everything I learned from this course about HTML/ CSS/ JavaScript was things I learned by myself for the quarter project. The course material is almost all about human centered design and design concepts. This was frustrating because there was a disconnect from the course material and the testing of our websites in discussion. There are online canvas quizzes for the readings every lecture.
The course is trivial. Every week you have to take two little quiz and complete part of the project by using HTML, CSS and Javascript. And you have to write lots of paper.
This class forces you to learn HTML/Javascript on your own because it isn't taught. That is the main part of the class and is essential for the project. The lectures did not teach you anything if you actually do the readings for the quizzes.
HCI is a super interesting subject, but that doesn't really translate well into a large lecture class, although it's evident that Nell is trying. The assignments are fine, but be wary of grade deflation. The TA's are very picky with grading.
GPA booster. This can be an interesting class, and you'll learn web dev principles. It's not as ⟪sy' as people say, and you do have to put in the hours to do well. Lectures however are just recounts of the readings, and were not informative at all for the most part, and reading quizzes in lecture means you still have to attend. Interesting content, but not the best taught course at NU.
Not bad. Project could be annoying at times. Most lectures were not directly relevant to project.
The in-class quizzes existed solely to check attendance, and definitely did not help with learning. Lectures essentially summarized the required reading, and there was very little actual programming instruction provided or required for the main assignment—which seemed unusual for a project class. Grading frequently did not have explanations given for seemingly arbitrary number scores.
You learn how to build a website which isn't the most exciting application for HCI but it's a useful skill; Nell was a good lecturer.
Grading was too subjective; very difficult without prior experience with HTML, CSS, and JS (not taught in class but necessary for project)
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        0        0.0%
Communication        7        5.3%
Graduate School        23        17.3%
KGSM        0        0.0%
McCormick        69        51.9%
Medill        0        0.0%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        34        25.6%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        2        1.4%
Sophomore        66        46.5%
Junior        31        21.8%
Senior        9        6.3%
Graduate        34        23.9%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        10        6.6%
Major/Minor requirement        100        66.2%
Elective requirement        26        17.2%
No requirement        14        9.3%
Other requirement        1        0.7%
Respondent(s)        144        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        1        0.7%
2        5        3.5%
3        21        14.6%
4        46        31.9%
5        50        34.7%
6-Extremely interested        21        14.6%




 Northwestern
Student Report for Michael Horn ( EECS_330-0_1: Human Computer Interaction)
Course and Teacher Evaluations CTEC Spring 2018
Project Audience 30
Responses Received 21
Response Ratio 70.0%
Report Comments
Course and Teacher Evaluations are intended solely for the use of faculty, staff and students of Northwestern University. Any reproduction, republication or redistribution of this site's content is prohibited without the express permission of Northwestern University.


For more information about the CTEC Guidelines please visit our website: http://www.northwestern.edu/ctec/guidelines/index.html
    
Creation Date    Fri, Jul 13, 2018
 Technology powered by BLUE
Download PDF
COURSE QUESTIONS
1. Provide an overall rating of the instruction.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        14
Mean        4.71
2. Provide an overall rating of the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        21
Mean        4.10
3. Estimate how much you learned in the course.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        21
Mean        3.95
4. Rate the effectiveness of the course in challenging you intellectually.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        21
Mean        3.43
5. Rate the effectiveness of the instructor in stimulating your interest in the subject.
Graphs illustrating the information in the accessible table that should immediately follow it.
Statistics        Value
Response Count        14
Mean        4.71
TIME-SURVEY QUESTION
6. Estimate the average number of hours per week you spent on this course outside of class and lab time.
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
3 or fewer        5        23.8%
4 - 7        10        47.6%
8 - 11        5        23.8%
12 - 15        1        4.8%
16 - 19        0        0.0%
20 or more        0        0.0%
ESSAY QUESTIONS
Please summarize your reaction to this course focusing on the aspects that were most important to you.
Comments
Not a ton of work. The class is much easier if you have a coding background˺lready know javascript/html. overall pretty easy! No tests or midterms.
This was a really easy course and just has a bunch of busy work in it. Great if you are looking for an easy class
The concepts were fun to learn and implement. Scoring was a bit tough but there were chances of recovering the lost marks. Not tough but needs efforts and imagination.
Lots of interesting topics, and the early part of the course helps you learn to code
Sometimes, it felt like we were not sufficiently challenged to utilize what we had learned in class. The material was interesting; however, it felt like the connection between the material and the projects was not strong enough.
Your entire grade is based on a few assignments and a quarter-long group project. Lectures are pretty much useless, but they take attendance.
Do not take this class if you expect to learn a lot. That being said it is a fine, pretty low commitment and interesting class. Lectures can be repetitive and grading arbitrary, but overall not a bad class.
Could be awesome if you have a great group. You have almost total flexibility of your project so I really enjoyed that. Lectures were not the most interesting though, lots of overlap with DTC and is kind of surface level.
I thought the project was a great idea, but the fact that it wasn't completed made me feel like this was a missed opportunity. Though understanding the scope of the course and the time we had this was understandable.
Class is simultaneously easy and a pain. Lecture content is simple and easy to understand but the main part of this class is the group project which can be a hassle depending on your project/group. Assemble a good team and choose a simple project.
Very boring class.
design concept
I have learned a lot about website development
The ideas learned in this course are very similar to DTC except that it focuses more on computer interfaces. I liked the professor and I had a good group for the project (which I think really changes the class if you have a bad group)
I really did not like this course. I wanted to learn more of the grit of web development like serious HTML,CSS, JavaScript (and even more like Ajax, jQuery, PHP). We didn't learn about any of this stuff. Instead, we focused on design principles and methodologies. Overall, I found this course very useless. It's relatively easy for a CS class / Interface Distro, but other than than, don't expect to come away with much.
DEMOGRAPHICS
What is the name of your school?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Education & SP        0        0.0%
Communication        0        0.0%
Graduate School        2        10.5%
KGSM        0        0.0%
McCormick        11        57.9%
Medill        1        5.3%
Music        0        0.0%
Summer        0        0.0%
SPS        0        0.0%
WCAS        5        26.3%
Your Class
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Freshman        2        9.5%
Sophomore        6        28.6%
Junior        6        28.6%
Senior        1        4.8%
Graduate        6        28.6%
Other        0        0.0%
What is your reason for taking the course? (mark all that apply)
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
Distribution requirement        1        4.2%
Major/Minor requirement        16        66.7%
Elective requirement        2        8.3%
No requirement        5        20.8%
Other requirement        0        0.0%
Respondent(s)        21        
What was your Interest in this subject before taking the course?
Graphs illustrating the information in the accessible table that should immediately follow it.
Options        Count        Percentage
1-Not interested at all        1        4.8%
2        1        4.8%
3        0        0.0%
4        7        33.3%
5        8        38.1%
6-Extremely interested        4        19.0%